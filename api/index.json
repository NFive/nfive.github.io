{
  "index.html": {
    "href": "index.html",
    "title": "API Reference | NFive API Reference",
    "keywords": "NFive Homepage API Reference NFive NFive Core SDK NFive Client SDK NFive Server SDK NFive Plugin SDK"
  },
  "client/NFive.SDK.Client.Input.KeyCode.html": {
    "href": "client/NFive.SDK.Client.Input.KeyCode.html",
    "title": "Enum KeyCode | NFive API Reference",
    "keywords": "Enum KeyCode Namespace : NFive.SDK.Client.Input Assembly : NFive.SDK.Client.net.dll Syntax public enum KeyCode Fields Name Description AltLeft AltRight ArrowDown ArrowLeft ArrowRight ArrowUp Backquote Backslash Backspace BracketLeft BracketRight CapsLock Comma ContextMenu ControlLeft ControlRight Delete Digit0 Digit1 Digit2 Digit3 Digit4 Digit5 Digit6 Digit7 Digit8 Digit9 End Equal Escape F1 F10 F11 F12 F13 F14 F15 F16 F17 F18 F19 F2 F20 F21 F22 F23 F24 F3 F4 F5 F6 F7 F8 F9 Home Insert IntlBackslash KeyA KeyB KeyC KeyD KeyE KeyF KeyG KeyH KeyI KeyJ KeyK KeyL KeyM KeyN KeyO KeyP KeyQ KeyR KeyS KeyT KeyU KeyV KeyW KeyX KeyY KeyZ MetaLeft MetaRight Minus MouseLeftClick MouseMiddleClick MouseMoveDown MouseMoveLeft MouseMoveRight MouseMoveUp MouseRightClick MouseWheelDown MouseWheelUp None NumLock Numpad0 Numpad1 Numpad2 Numpad3 Numpad4 Numpad5 Numpad6 Numpad7 Numpad8 Numpad9 NumpadAdd NumpadDecimal NumpadDivide NumpadEnter NumpadEqual NumpadMultiply NumpadSubtract PageDown PageUp Pause Period PrintScreen Quote Return ScrollLock Semicolon ShiftLeft ShiftRight Slash Space Tab"
  },
  "client/NFive.SDK.Client.Input.InputModifier.html": {
    "href": "client/NFive.SDK.Client.Input.InputModifier.html",
    "title": "Enum InputModifier | NFive API Reference",
    "keywords": "Enum InputModifier Namespace : NFive.SDK.Client.Input Assembly : NFive.SDK.Client.net.dll Syntax [Flags] public enum InputModifier Fields Name Description Alt Any Ctrl None Shift"
  },
  "core/NFive.SDK.Core.Models.Vector3.html": {
    "href": "core/NFive.SDK.Core.Models.Vector3.html",
    "title": "Class Vector3 | NFive API Reference",
    "keywords": "Class Vector3 Inheritance Object Vector2 Vector3 Inherited Members Vector2.X Vector2.Y Vector2.Equals(Vector2) Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax public class Vector3 : Vector2 Constructors | Improve this Doc View Source Vector3() Initializes a new instance of the Vector3 class. Declaration public Vector3() | Improve this Doc View Source Vector3(Single, Single, Single) Initializes a new instance of the Vector3 class. Declaration public Vector3(float x, float y, float z) Parameters Type Name Description Single x The position on the X axis. Single y The position on the Y axis. Single z The position on the Z axis. Properties | Improve this Doc View Source Z Gets or sets the position on the Z axis. Declaration [Required] public float Z { get; set; } Property Value Type Description Single The position on the Z axis. Methods | Improve this Doc View Source Equals(Vector3) Determines whether the specified Vector3 , is equal to this instance. Declaration protected bool Equals(Vector3 pos) Parameters Type Name Description Vector3 pos The Vector3 to compare with this instance. Returns Type Description Boolean true if the specified Vector3 is equal to this instance; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Vector2.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Vector2.GetHashCode() | Improve this Doc View Source ToString() Returns a String that represents this position. Declaration public override string ToString() Returns Type Description String A String that represents this position. Overrides Vector2.ToString() Operators | Improve this Doc View Source Equality(Vector3, Vector3) This method determines whether two Vectors have the same value. Declaration public static bool operator ==(Vector3 a, Vector3 b) Parameters Type Name Description Vector3 a Vector3 b Returns Type Description Boolean See Also Inequality(Vector3, Vector3) Equals(Vector3) | Improve this Doc View Source Inequality(Vector3, Vector3) This method determines whether two Vectors do not have the same value. Declaration public static bool operator !=(Vector3 a, Vector3 b) Parameters Type Name Description Vector3 a Vector3 b Returns Type Description Boolean See Also Equality(Vector3, Vector3) Equals(Vector3) Extension Methods Vector2Extensions.TranslateDir(Vector2, Single, Single) Vector2Extensions.Lerp(Vector2, Vector2, Single) Vector2Extensions.InFrontOf(Vector2, Single, Single) Vector3Extensions.TranslateDir(Vector3, Single, Single) Vector3Extensions.Lerp(Vector3, Vector3, Single) Vector3Extensions.RotateAround(Vector3, Single, Single) Vector3Extensions.InFrontOf(Vector3, Single, Single) Vector3Extensions.ToPosition(Vector3)"
  },
  "core/NFive.SDK.Core.Models.Vector2.html": {
    "href": "core/NFive.SDK.Core.Models.Vector2.html",
    "title": "Class Vector2 | NFive API Reference",
    "keywords": "Class Vector2 Represents a position in 2D space. Inheritance Object Vector2 Vector3 Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax [ComplexType] public class Vector2 Constructors | Improve this Doc View Source Vector2() Initializes a new instance of the Vector2 class. Declaration public Vector2() | Improve this Doc View Source Vector2(Single, Single) Initializes a new instance of the Vector2 class. Declaration public Vector2(float x, float y) Parameters Type Name Description Single x The position on the X axis. Single y The position on the Y axis. Properties | Improve this Doc View Source X Gets or sets the position on the X axis. Declaration [Required] public float X { get; set; } Property Value Type Description Single The position on the X axis. | Improve this Doc View Source Y Gets or sets the position on the Y axis. Declaration [Required] public float Y { get; set; } Property Value Type Description Single The position on the Y axis. Methods | Improve this Doc View Source Equals(Vector2) Determines whether the specified Vector2 , is equal to this instance. Declaration protected bool Equals(Vector2 pos) Parameters Type Name Description Vector2 pos The Vector2 to compare with this instance. Returns Type Description Boolean true if the specified Vector2 is equal to this instance; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Returns a String that represents this vector. Declaration public override string ToString() Returns Type Description String A String that represents this vector. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Vector2, Vector2) This method determines whether two Vectors have the same value. Declaration public static bool operator ==(Vector2 a, Vector2 b) Parameters Type Name Description Vector2 a Vector2 b Returns Type Description Boolean See Also Inequality(Vector2, Vector2) Equals(Vector2) | Improve this Doc View Source Inequality(Vector2, Vector2) This method determines whether two Vectors do not have the same value. Declaration public static bool operator !=(Vector2 a, Vector2 b) Parameters Type Name Description Vector2 a Vector2 b Returns Type Description Boolean See Also Equality(Vector2, Vector2) Equals(Vector2) Extension Methods Vector2Extensions.TranslateDir(Vector2, Single, Single) Vector2Extensions.Lerp(Vector2, Vector2, Single) Vector2Extensions.InFrontOf(Vector2, Single, Single)"
  },
  "core/NFive.SDK.Core.Models.Position.html": {
    "href": "core/NFive.SDK.Core.Models.Position.html",
    "title": "Class Position | NFive API Reference",
    "keywords": "Class Position Represents a position in 3D space. Inheritance Object Position Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax [ComplexType] public class Position Constructors | Improve this Doc View Source Position() Initializes a new instance of the Position class. Declaration public Position() | Improve this Doc View Source Position(Single, Single, Single) Initializes a new instance of the Position class. Declaration public Position(float x, float y, float z) Parameters Type Name Description Single x The position on the X axis. Single y The position on the Y axis. Single z The position on the Z axis. Properties | Improve this Doc View Source X Gets or sets the position on the X axis. Declaration [Required] public float X { get; set; } Property Value Type Description Single The position on the X axis. | Improve this Doc View Source Y Gets or sets the position on the Y axis. Declaration [Required] public float Y { get; set; } Property Value Type Description Single The position on the Y axis. | Improve this Doc View Source Z Gets or sets the position on the Z axis. Declaration [Required] public float Z { get; set; } Property Value Type Description Single The position on the Z axis. Methods | Improve this Doc View Source Equals(Position) Determines whether the specified Position , is equal to this instance. Declaration protected bool Equals(Position pos) Parameters Type Name Description Position pos The Position to compare with this instance. Returns Type Description Boolean true if the specified Position is equal to this instance; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Returns a String that represents this position. Declaration public override string ToString() Returns Type Description String A String that represents this position. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Position, Position) This method determines whether two Positions have the same value. Declaration public static bool operator ==(Position a, Position b) Parameters Type Name Description Position a Position b Returns Type Description Boolean See Also Inequality(Position, Position) Equals(Position) | Improve this Doc View Source Inequality(Position, Position) This method determines whether two Positions do not have the same value. Declaration public static bool operator !=(Position a, Position b) Parameters Type Name Description Position a Position b Returns Type Description Boolean See Also Equality(Position, Position) Equals(Position) Extension Methods PositionExtensions.TranslateDir(Position, Single, Single) PositionExtensions.Lerp(Position, Position, Single) PositionExtensions.InFrontOf(Position, Single, Single) PositionExtensions.ToVector3(Position)"
  },
  "core/NFive.SDK.Core.Models.Player.html": {
    "href": "core/NFive.SDK.Core.Models.Player.html",
    "title": "Namespace NFive.SDK.Core.Models.Player | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Models.Player Classes Session Session model representing a user's connection to the server. User User model representing the player on the server."
  },
  "core/NFive.SDK.Core.Models.Player.User.html": {
    "href": "core/NFive.SDK.Core.Models.Player.User.html",
    "title": "Class User | NFive API Reference",
    "keywords": "Class User User model representing the player on the server. Inheritance Object IdentityModel User Implements IIdentityModel Inherited Members IdentityModel.Id IdentityModel.Created IdentityModel.Deleted Namespace : NFive.SDK.Core.Models.Player Assembly : NFive.SDK.Core.net.dll Syntax public class User : IdentityModel, IIdentityModel Properties | Improve this Doc View Source License Gets or sets the license. Declaration [Required] [StringLength(40, MinimumLength = 40)] public string License { get; set; } Property Value Type Description String The license. | Improve this Doc View Source Name Gets or sets the player name. Declaration [Required] [StringLength(32, MinimumLength = 1)] public string Name { get; set; } Property Value Type Description String The player name. | Improve this Doc View Source Sessions Gets or sets the sessions. Declaration [InverseProperty(\"User\")] public virtual List<Session> Sessions { get; set; } Property Value Type Description List < Session > The sessions. | Improve this Doc View Source SteamId Gets or sets the Steam identifier. Declaration public long? SteamId { get; set; } Property Value Type Description Nullable < Int64 > The Steam identifier. Implements IIdentityModel See Also IdentityModel"
  },
  "core/NFive.SDK.Core.Arguments.ValueAttribute.html": {
    "href": "core/NFive.SDK.Core.Arguments.ValueAttribute.html",
    "title": "Class ValueAttribute | NFive API Reference",
    "keywords": "Class ValueAttribute Inheritance Object Attribute ValueAttribute Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class ValueAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ValueAttribute(Int32) Initializes a new instance of the ValueAttribute class. Declaration public ValueAttribute(int index) Parameters Type Name Description Int32 index Properties | Improve this Doc View Source Index Gets the position this option has on the command line. Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Required Gets or sets a value indicating whether a command line option is required. Declaration public bool Required { get; set; } Property Value Type Description Boolean"
  },
  "core/NFive.SDK.Core.Arguments.SpecificationType.html": {
    "href": "core/NFive.SDK.Core.Arguments.SpecificationType.html",
    "title": "Enum SpecificationType | NFive API Reference",
    "keywords": "Enum SpecificationType Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public enum SpecificationType Fields Name Description Option Value"
  },
  "core/NFive.SDK.Core.Arguments.Argument.Arg.html": {
    "href": "core/NFive.SDK.Core.Arguments.Argument.Arg.html",
    "title": "Class Argument.Arg | NFive API Reference",
    "keywords": "Class Argument.Arg Inheritance Object Argument.Arg Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public class Arg Properties | Improve this Doc View Source Data Declaration public string Data { get; set; } Property Value Type Description String | Improve this Doc View Source Processed Declaration public bool Processed { get; set; } Property Value Type Description Boolean"
  },
  "nfive/NFive.Server.html": {
    "href": "nfive/NFive.Server.html",
    "title": "Namespace NFive.Server | NFive API Reference",
    "keywords": "Namespace NFive.Server Classes ClientList Program"
  },
  "nfive/NFive.Server.Storage.html": {
    "href": "nfive/NFive.Server.Storage.html",
    "title": "Namespace NFive.Server.Storage | NFive API Reference",
    "keywords": "Namespace NFive.Server.Storage Classes StorageContext"
  },
  "nfive/NFive.Server.Rpc.OutboundMessage.html": {
    "href": "nfive/NFive.Server.Rpc.OutboundMessage.html",
    "title": "Class OutboundMessage | NFive API Reference",
    "keywords": "Class OutboundMessage Inheritance Object OutboundMessage Namespace : NFive.Server.Rpc Assembly : NFive.Server.net.dll Syntax public class OutboundMessage : object Properties | Improve this Doc View Source Event Declaration public string Event { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source Payloads Declaration public List<string> Payloads { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Target Declaration public IClient Target { get; set; } Property Value Type Description IClient Methods | Improve this Doc View Source Pack() Declaration public byte[] Pack() Returns Type Description Byte []"
  },
  "nfive/NFive.Server.Rpc.InboundMessage.html": {
    "href": "nfive/NFive.Server.Rpc.InboundMessage.html",
    "title": "Class InboundMessage | NFive API Reference",
    "keywords": "Class InboundMessage Inheritance Object InboundMessage Namespace : NFive.Server.Rpc Assembly : NFive.Server.net.dll Syntax public class InboundMessage : object Properties | Improve this Doc View Source Event Declaration public string Event { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source Payloads Declaration public List<string> Payloads { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Source Declaration public int Source { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source From(Byte[]) Declaration public static InboundMessage From(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description InboundMessage"
  },
  "nfive/NFive.Server.Rpc.Client.html": {
    "href": "nfive/NFive.Server.Rpc.Client.html",
    "title": "Class Client | NFive API Reference",
    "keywords": "Class Client Inheritance Object Client Namespace : NFive.Server.Rpc Assembly : NFive.Server.net.dll Syntax public class Client : IClient Constructors | Improve this Doc View Source Client(Int32) Declaration public Client(int handle) Parameters Type Name Description Int32 handle | Improve this Doc View Source Client(String) Declaration public Client(string handle) Parameters Type Name Description String handle Properties | Improve this Doc View Source DiscordId Declaration public ulong? DiscordId { get; } Property Value Type Description Nullable < UInt64 > | Improve this Doc View Source EndPoint Declaration public string EndPoint { get; } Property Value Type Description String | Improve this Doc View Source Handle Declaration public int Handle { get; } Property Value Type Description Int32 | Improve this Doc View Source License Declaration public string License { get; } Property Value Type Description String | Improve this Doc View Source LiveId Declaration public ulong? LiveId { get; } Property Value Type Description Nullable < UInt64 > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Ping Declaration public int Ping { get; } Property Value Type Description Int32 | Improve this Doc View Source SteamId Declaration public long? SteamId { get; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source XboxLiveId Declaration public ulong? XboxLiveId { get; } Property Value Type Description Nullable < UInt64 > Methods | Improve this Doc View Source GetIdentifiers() Declaration protected Dictionary<string, string> GetIdentifiers() Returns Type Description Dictionary < String , String >"
  },
  "nfive/NFive.Server.Rcon.html": {
    "href": "nfive/NFive.Server.Rcon.html",
    "title": "Namespace NFive.Server.Rcon | NFive API Reference",
    "keywords": "Namespace NFive.Server.Rcon Classes RconManager"
  },
  "nfive/NFive.Server.Migrations.html": {
    "href": "nfive/NFive.Server.Migrations.html",
    "title": "Namespace NFive.Server.Migrations | NFive API Reference",
    "keywords": "Namespace NFive.Server.Migrations Classes Init RemoveSteamIdIndex"
  },
  "nfive/NFive.Server.Migrations.RemoveSteamIdIndex.html": {
    "href": "nfive/NFive.Server.Migrations.RemoveSteamIdIndex.html",
    "title": "Class RemoveSteamIdIndex | NFive API Reference",
    "keywords": "Class RemoveSteamIdIndex Inheritance Object RemoveSteamIdIndex Implements IMigrationMetadata Namespace : NFive.Server.Migrations Assembly : NFive.Server.net.dll Syntax public class RemoveSteamIdIndex : DbMigration, IMigrationMetadata Methods | Improve this Doc View Source Down() Declaration public override void Down() | Improve this Doc View Source Up() Declaration public override void Up() Implements IMigrationMetadata"
  },
  "nfive/NFive.Server.Migrations.Init.html": {
    "href": "nfive/NFive.Server.Migrations.Init.html",
    "title": "Class Init | NFive API Reference",
    "keywords": "Class Init Inheritance Object Init Implements IMigrationMetadata Namespace : NFive.Server.Migrations Assembly : NFive.Server.net.dll Syntax public class Init : DbMigration, IMigrationMetadata Methods | Improve this Doc View Source Down() Declaration public override void Down() | Improve this Doc View Source Up() Declaration public override void Up() Implements IMigrationMetadata"
  },
  "nfive/NFive.Server.IoC.html": {
    "href": "nfive/NFive.Server.IoC.html",
    "title": "Namespace NFive.Server.IoC | NFive API Reference",
    "keywords": "Namespace NFive.Server.IoC Classes ContainerRegistrar"
  },
  "nfive/NFive.Server.Diagnostics.Logger.html": {
    "href": "nfive/NFive.Server.Diagnostics.Logger.html",
    "title": "Class Logger | NFive API Reference",
    "keywords": "Class Logger Inheritance Object Logger Namespace : NFive.Server.Diagnostics Assembly : NFive.Server.net.dll Syntax public class Logger : ILogger Constructors | Improve this Doc View Source Logger(LogLevel, String) Declaration public Logger(LogLevel minLevel = null, string prefix = \"\") Parameters Type Name Description LogLevel minLevel String prefix Properties | Improve this Doc View Source Level Declaration public LogLevel Level { get; } Property Value Type Description LogLevel | Improve this Doc View Source Prefix Declaration public string Prefix { get; } Property Value Type Description String Methods | Improve this Doc View Source Debug(String) Declaration public void Debug(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(Exception, String) Declaration public void Error(Exception exception, string message) Parameters Type Name Description Exception exception String message | Improve this Doc View Source Info(String) Declaration public void Info(string message) Parameters Type Name Description String message | Improve this Doc View Source Initialize() Declaration public static void Initialize() | Improve this Doc View Source Log(String, LogLevel) Declaration public void Log(string message, LogLevel level) Parameters Type Name Description String message LogLevel level | Improve this Doc View Source Trace(String) Declaration public void Trace(string message) Parameters Type Name Description String message | Improve this Doc View Source Warn(String) Declaration public void Warn(string message) Parameters Type Name Description String message"
  },
  "nfive/NFive.Server.Controllers.html": {
    "href": "nfive/NFive.Server.Controllers.html",
    "title": "Namespace NFive.Server.Controllers | NFive API Reference",
    "keywords": "Namespace NFive.Server.Controllers Classes DatabaseController EventController SessionController"
  },
  "server/NFive.SDK.Server.Communications.ICommunicationTransmitClient.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationTransmitClient.html",
    "title": "Interface ICommunicationTransmitClient | NFive API Reference",
    "keywords": "Interface ICommunicationTransmitClient Inherited Members ICommunicationTransmit.Emit(Object[]) ICommunicationTransmit.Request<TReturn>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationTransmitClient : ICommunicationTransmit"
  },
  "server/NFive.SDK.Server.Communications.ICommunicationTransmit.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationTransmit.html",
    "title": "Interface ICommunicationTransmit | NFive API Reference",
    "keywords": "Interface ICommunicationTransmit Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationTransmit Methods | Improve this Doc View Source Emit(Object[]) Emits the specified payloads. Declaration void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. | Improve this Doc View Source Request<TReturn>(Object[]) Requests the specified type with the specified parameters. Declaration Task<TReturn> Request<TReturn>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task <TReturn> Type Parameters Name Description TReturn The type of the return. | Improve this Doc View Source Request<TReturn1, TReturn2>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2>> Request<TReturn1, TReturn2>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2>> The requested types. Type Parameters Name Description TReturn1 The type of the return1. TReturn2 The type of the return2. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3>> Request<TReturn1, TReturn2, TReturn3>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3, TReturn4>> Request<TReturn1, TReturn2, TReturn3, TReturn4>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3, TReturn4>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. TReturn4 The type of the 4. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>> Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. TReturn4 The type of the 4. TReturn5 The type of the 5."
  },
  "server/NFive.SDK.Server.Communications.ICommunicationTarget.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationTarget.html",
    "title": "Interface ICommunicationTarget | NFive API Reference",
    "keywords": "Interface ICommunicationTarget Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationTarget Methods | Improve this Doc View Source FromClient(IClient) Returns a communication adapter adapter for receiving, targeting the supplied client. Declaration ICommunicationReceiveClient FromClient(IClient client) Parameters Type Name Description IClient client The client the adapter will communicate with. Returns Type Description ICommunicationReceiveClient A client targeted communication adapter for receiving. | Improve this Doc View Source FromClients() Returns a communication adapter for receiving, targeting all clients. Declaration ICommunicationReceiveClient FromClients() Returns Type Description ICommunicationReceiveClient A communication adapter for receiving from all clients. | Improve this Doc View Source FromServer() Returns a communication adapter for receiving from the server. Declaration ICommunicationReceiveServer FromServer() Returns Type Description ICommunicationReceiveServer A server targeted communication adapter for receiving. | Improve this Doc View Source ToClient(IClient) Returns a communication adapter for transmitting, targeting the supplied client. Declaration ICommunicationTransmitClient ToClient(IClient client) Parameters Type Name Description IClient client The client the adapter will communicate with. Returns Type Description ICommunicationTransmitClient A client targeted communication adapter for transmitting. | Improve this Doc View Source ToClients() Returns a communication adapter adapter for transmitting, targeting all clients. Declaration ICommunicationTransmitClient ToClients() Returns Type Description ICommunicationTransmitClient A communication adapter for transmitting to all clients. | Improve this Doc View Source ToServer() Returns a communication adapter adapter for transmitting to the server. Declaration ICommunicationTransmitServer ToServer() Returns Type Description ICommunicationTransmitServer A server targeted communication adapter for transmitting."
  },
  "server/NFive.SDK.Server.Communications.ICommunicationReceiveServer.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationReceiveServer.html",
    "title": "Interface ICommunicationReceiveServer | NFive API Reference",
    "keywords": "Interface ICommunicationReceiveServer Inherited Members ICommunicationReceive.On(Action<ICommunicationMessage>) ICommunicationReceive.On<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.On<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) ICommunicationReceive.OnRequest(Action<ICommunicationMessage>) ICommunicationReceive.OnRequest<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationReceiveServer : ICommunicationReceive"
  },
  "client/NFive.SDK.Client.Interface.Overlay.html": {
    "href": "client/NFive.SDK.Client.Interface.Overlay.html",
    "title": "Class Overlay | NFive API Reference",
    "keywords": "Class Overlay Inheritance Object Overlay Implements IOverlay IDisposable Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public abstract class Overlay : IOverlay, IDisposable Constructors | Improve this Doc View Source Overlay(OverlayManager) Declaration protected Overlay(OverlayManager manager) Parameters Type Name Description OverlayManager manager | Improve this Doc View Source Overlay(OverlayManager, String) Declaration protected Overlay(OverlayManager manager, string fileName) Parameters Type Name Description OverlayManager manager String fileName Properties | Improve this Doc View Source Manager Declaration public OverlayManager Manager { get; } Property Value Type Description OverlayManager | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Visible Declaration public bool Visible { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Emit(String, Object) Declaration public void Emit(string event, object data = null) Parameters Type Name Description String event Object data | Improve this Doc View Source Hide() Declaration public void Hide() | Improve this Doc View Source On(String, Action) Declaration public void On(string event, Action action) Parameters Type Name Description String event Action action | Improve this Doc View Source On<T>(String, Action<T>) Declaration public void On<T>(string event, Action<T> action) Parameters Type Name Description String event Action <T> action Type Parameters Name Description T | Improve this Doc View Source On<TReturn>(String, Func<TReturn>) Declaration public void On<TReturn>(string event, Func<TReturn> action) Parameters Type Name Description String event Func <TReturn> action Type Parameters Name Description TReturn | Improve this Doc View Source On<T, TReturn>(String, Func<T, TReturn>) Declaration public void On<T, TReturn>(string event, Func<T, TReturn> action) Parameters Type Name Description String event Func <T, TReturn> action Type Parameters Name Description T TReturn | Improve this Doc View Source Ready() Declaration public abstract dynamic Ready() Returns Type Description Object | Improve this Doc View Source Show() Declaration public void Show() Implements IOverlay System.IDisposable"
  },
  "client/NFive.SDK.Client.Extensions.html": {
    "href": "client/NFive.SDK.Client.Extensions.html",
    "title": "Namespace NFive.SDK.Client.Extensions | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Extensions Classes ColorExtensions PedExtensions PlayerExtensions VectorExtensions"
  },
  "client/NFive.SDK.Client.Extensions.VectorExtensions.html": {
    "href": "client/NFive.SDK.Client.Extensions.VectorExtensions.html",
    "title": "Class VectorExtensions | NFive API Reference",
    "keywords": "Class VectorExtensions Inheritance Object VectorExtensions Namespace : NFive.SDK.Client.Extensions Assembly : NFive.SDK.Client.net.dll Syntax public static class VectorExtensions Methods | Improve this Doc View Source ToCitVector3(Vector3) Declaration public static CitizenFX.Core.Vector3 ToCitVector3(this Vector3 vector3) Parameters Type Name Description Vector3 vector3 Returns Type Description CitizenFX.Core.Vector3 | Improve this Doc View Source ToVector3(CitizenFX.Core.Vector3) Declaration public static Vector3 ToVector3(this CitizenFX.Core.Vector3 vector3) Parameters Type Name Description CitizenFX.Core.Vector3 vector3 Returns Type Description Vector3"
  },
  "client/NFive.SDK.Client.Extensions.PlayerExtensions.html": {
    "href": "client/NFive.SDK.Client.Extensions.PlayerExtensions.html",
    "title": "Class PlayerExtensions | NFive API Reference",
    "keywords": "Class PlayerExtensions Inheritance Object PlayerExtensions Namespace : NFive.SDK.Client.Extensions Assembly : NFive.SDK.Client.net.dll Syntax public static class PlayerExtensions Methods | Improve this Doc View Source Freeze(Player, Boolean) Freezes the specified player in place. Declaration public static void Freeze(this Player player, bool freeze = true) Parameters Type Name Description Player player The player to freeze. Boolean freeze If set to true freeze the player, otherwise unfreeze. | Improve this Doc View Source Unfreeze(Player) Unfreezes the specified player. Declaration public static void Unfreeze(this Player player) Parameters Type Name Description Player player The player to unfreeze."
  },
  "client/NFive.SDK.Client.Extensions.PedExtensions.html": {
    "href": "client/NFive.SDK.Client.Extensions.PedExtensions.html",
    "title": "Class PedExtensions | NFive API Reference",
    "keywords": "Class PedExtensions Inheritance Object PedExtensions Namespace : NFive.SDK.Client.Extensions Assembly : NFive.SDK.Client.net.dll Syntax public static class PedExtensions Methods | Improve this Doc View Source GetPositionInFront(Ped, Single) Declaration public static Core.Models.Vector3 GetPositionInFront(this Ped ped, float distance) Parameters Type Name Description Ped ped Single distance Returns Type Description Core.Models.Vector3 | Improve this Doc View Source RunTaskSequence(Ped, TaskSequence) Declaration public static Task RunTaskSequence(this Ped ped, TaskSequence sequence) Parameters Type Name Description Ped ped TaskSequence sequence Returns Type Description Task"
  },
  "client/NFive.SDK.Client.Extensions.ColorExtensions.html": {
    "href": "client/NFive.SDK.Client.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions | NFive API Reference",
    "keywords": "Class ColorExtensions Inheritance Object ColorExtensions Namespace : NFive.SDK.Client.Extensions Assembly : NFive.SDK.Client.net.dll Syntax public static class ColorExtensions Methods | Improve this Doc View Source ToCitColor(Color) Declaration public static Color ToCitColor(this Color color) Parameters Type Name Description Color color Returns Type Description Color | Improve this Doc View Source ToColor(Color) Declaration public static Color ToColor(this Color color) Parameters Type Name Description Color color Returns Type Description Color"
  },
  "client/NFive.SDK.Client.Events.html": {
    "href": "client/NFive.SDK.Client.Events.html",
    "title": "Namespace NFive.SDK.Client.Events | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Events Classes ClientEvents FiveMClientEvents SessionEvents Interfaces ITickManager"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationManager.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationManager.html",
    "title": "Interface ICommunicationManager | NFive API Reference",
    "keywords": "Interface ICommunicationManager Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationManager Methods | Improve this Doc View Source Event(String) Declaration ICommunicationTarget Event(string event) Parameters Type Name Description String event Returns Type Description ICommunicationTarget"
  },
  "client/NFive.SDK.Client.Commands.html": {
    "href": "client/NFive.SDK.Client.Commands.html",
    "title": "Namespace NFive.SDK.Client.Commands | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Commands Interfaces ICommandManager"
  },
  "core/NFive.SDK.Core.Plugins.Version.html": {
    "href": "core/NFive.SDK.Core.Plugins.Version.html",
    "title": "Class Version | NFive API Reference",
    "keywords": "Class Version Represents a semantic version number. Inheritance Object Version Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Version Properties | Improve this Doc View Source Build Gets or sets the build version. Declaration public string Build { get; set; } Property Value Type Description String The build version. | Improve this Doc View Source Major Gets or sets the major version number. Declaration public int Major { get; set; } Property Value Type Description Int32 The major version number. | Improve this Doc View Source Minor Gets or sets the minor version number. Declaration public int Minor { get; set; } Property Value Type Description Int32 The minor version number. | Improve this Doc View Source Patch Gets or sets the patch version number. Declaration public int Patch { get; set; } Property Value Type Description Int32 The patch version number. | Improve this Doc View Source PreRelease Gets or sets the pre release version. Declaration public string PreRelease { get; set; } Property Value Type Description String The pre release version. Methods | Improve this Doc View Source ToString() Returns a formatted String that represents this version number. Declaration public override string ToString() Returns Type Description String A formatted String that represents this version number. Overrides Object.ToString()"
  },
  "core/NFive.SDK.Core.Plugins.Server.html": {
    "href": "core/NFive.SDK.Core.Plugins.Server.html",
    "title": "Class Server | NFive API Reference",
    "keywords": "Class Server Server file requirements for a plugin. Inheritance Object Server Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Server Properties | Improve this Doc View Source Include Gets or sets the server plugin include files. Declaration public List<string> Include { get; set; } Property Value Type Description List < String > The server plugin include files. | Improve this Doc View Source Main Gets or sets the main server plugin file. Declaration public List<string> Main { get; set; } Property Value Type Description List < String > The main server plugin file."
  },
  "core/NFive.SDK.Core.Plugins.Repository.html": {
    "href": "core/NFive.SDK.Core.Plugins.Repository.html",
    "title": "Class Repository | NFive API Reference",
    "keywords": "Class Repository Repository configuration for a plugin. Inheritance Object Repository Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Repository Properties | Improve this Doc View Source Name Gets or sets the repository name. Declaration public Name Name { get; set; } Property Value Type Description Name The repository name. | Improve this Doc View Source Path Gets or sets the repository path. Declaration public string Path { get; set; } Property Value Type Description String The repository path. | Improve this Doc View Source Type Gets or sets the repository type. Declaration public string Type { get; set; } Property Value Type Description String The repository type. | Improve this Doc View Source Url Gets or sets the repository URL. Declaration public string Url { get; set; } Property Value Type Description String The repository URL."
  },
  "core/NFive.SDK.Core.Diagnostics.ILogger.html": {
    "href": "core/NFive.SDK.Core.Diagnostics.ILogger.html",
    "title": "Interface ILogger | NFive API Reference",
    "keywords": "Interface ILogger Provides logging interface and utility functions. Namespace : NFive.SDK.Core.Diagnostics Assembly : NFive.SDK.Core.net.dll Syntax public interface ILogger Properties | Improve this Doc View Source Prefix Gets the log prefix. Declaration string Prefix { get; } Property Value Type Description String The log prefix. Methods | Improve this Doc View Source Debug(String) Writes the diagnostic message at the Debug level. Declaration void Debug(string message) Parameters Type Name Description String message The message to be written. | Improve this Doc View Source Error(Exception) Writes the diagnostic message at the Trace level. Declaration void Error(Exception exception) Parameters Type Name Description Exception exception The exception to be logged. | Improve this Doc View Source Error(Exception, String) Writes the diagnostic message at the Error level. Declaration void Error(Exception exception, string message) Parameters Type Name Description Exception exception The exception to be logged. String message The message to be written. | Improve this Doc View Source Info(String) Writes the diagnostic message at the Info level. Declaration void Info(string message) Parameters Type Name Description String message The message to be written. | Improve this Doc View Source Log(String, LogLevel) Writes the diagnostic message at a specified log level. Declaration void Log(string message, LogLevel level) Parameters Type Name Description String message The message to be written. LogLevel level The log level to be written at. | Improve this Doc View Source Trace(String) Writes the diagnostic message at the Trace level. Declaration void Trace(string message) Parameters Type Name Description String message The message to be written. | Improve this Doc View Source Warn(String) Writes the diagnostic message at the Warn level. Declaration void Warn(string message) Parameters Type Name Description String message The message to be written."
  },
  "core/NFive.SDK.Core.Configuration.LocaleConfiguration.html": {
    "href": "core/NFive.SDK.Core.Configuration.LocaleConfiguration.html",
    "title": "Class LocaleConfiguration | NFive API Reference",
    "keywords": "Class LocaleConfiguration Inheritance Object LocaleConfiguration Namespace : NFive.SDK.Core.Configuration Assembly : NFive.SDK.Core.net.dll Syntax public class LocaleConfiguration Properties | Improve this Doc View Source Culture Declaration public List<CultureInfo> Culture { get; set; } Property Value Type Description List < CultureInfo > | Improve this Doc View Source TimeZone Declaration public TimeZoneInfo TimeZone { get; set; } Property Value Type Description TimeZoneInfo"
  },
  "core/NFive.SDK.Core.Chat.html": {
    "href": "core/NFive.SDK.Core.Chat.html",
    "title": "Namespace NFive.SDK.Core.Chat | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Chat Classes ChatMessage Interfaces IChatMessage Represents a chat message sent from a User ."
  },
  "core/NFive.SDK.Core.Chat.IChatMessage.html": {
    "href": "core/NFive.SDK.Core.Chat.IChatMessage.html",
    "title": "Interface IChatMessage | NFive API Reference",
    "keywords": "Interface IChatMessage Represents a chat message sent from a User . Namespace : NFive.SDK.Core.Chat Assembly : NFive.SDK.Core.net.dll Syntax public interface IChatMessage Properties | Improve this Doc View Source Content Gets or sets the content of the message. Declaration string Content { get; set; } Property Value Type Description String The content of the message. | Improve this Doc View Source Id Gets or sets the unique identifier of the message. Declaration Guid Id { get; set; } Property Value Type Description Guid The unique identifier of the message. | Improve this Doc View Source Sender Gets or sets the User sending the message. Declaration User Sender { get; set; } Property Value Type Description User The User sending the message. | Improve this Doc View Source Target Gets or sets the target User of the message. Declaration User Target { get; set; } Property Value Type Description User The target User of the message."
  },
  "core/NFive.SDK.Core.Chat.ChatMessage.html": {
    "href": "core/NFive.SDK.Core.Chat.ChatMessage.html",
    "title": "Class ChatMessage | NFive API Reference",
    "keywords": "Class ChatMessage Inheritance Object ChatMessage Implements IChatMessage Namespace : NFive.SDK.Core.Chat Assembly : NFive.SDK.Core.net.dll Syntax public class ChatMessage : IChatMessage Constructors | Improve this Doc View Source ChatMessage() Declaration public ChatMessage() Properties | Improve this Doc View Source Content Declaration public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source Sender Declaration public User Sender { get; set; } Property Value Type Description User | Improve this Doc View Source Target Declaration public User Target { get; set; } Property Value Type Description User Implements IChatMessage"
  },
  "core/NFive.SDK.Core.Arguments.Specification.html": {
    "href": "core/NFive.SDK.Core.Arguments.Specification.html",
    "title": "Class Specification | NFive API Reference",
    "keywords": "Class Specification Inheritance Object Specification OptionSpecification ValueSpecification Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public abstract class Specification Constructors | Improve this Doc View Source Specification(PropertyInfo, SpecificationType, Boolean) Declaration protected Specification(PropertyInfo property, SpecificationType tag, bool required = false) Parameters Type Name Description PropertyInfo property SpecificationType tag Boolean required Properties | Improve this Doc View Source Property Declaration public PropertyInfo Property { get; } Property Value Type Description PropertyInfo | Improve this Doc View Source Required Declaration public bool Required { get; } Property Value Type Description Boolean | Improve this Doc View Source Tag Declaration public SpecificationType Tag { get; } Property Value Type Description SpecificationType Methods | Improve this Doc View Source FromProperty(PropertyInfo) Declaration public static Specification FromProperty(PropertyInfo property) Parameters Type Name Description PropertyInfo property Returns Type Description Specification"
  },
  "core/NFive.SDK.Core.Arguments.OptionSpecification.html": {
    "href": "core/NFive.SDK.Core.Arguments.OptionSpecification.html",
    "title": "Class OptionSpecification | NFive API Reference",
    "keywords": "Class OptionSpecification Inheritance Object Specification OptionSpecification Inherited Members Specification.Property Specification.Tag Specification.Required Specification.FromProperty(PropertyInfo) Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public sealed class OptionSpecification : Specification Constructors | Improve this Doc View Source OptionSpecification(PropertyInfo, String, String) Declaration public OptionSpecification(PropertyInfo property, string shortName, string longName) Parameters Type Name Description PropertyInfo property String shortName String longName Properties | Improve this Doc View Source LongName Declaration public string LongName { get; } Property Value Type Description String | Improve this Doc View Source ShortName Declaration public string ShortName { get; } Property Value Type Description String Methods | Improve this Doc View Source FromAttribute(PropertyInfo, OptionAttribute, Type) Declaration public static OptionSpecification FromAttribute(PropertyInfo property, OptionAttribute attribute, Type conversionType) Parameters Type Name Description PropertyInfo property OptionAttribute attribute Type conversionType Returns Type Description OptionSpecification"
  },
  "core/NFive.SDK.Core.Arguments.OptionAttribute.html": {
    "href": "core/NFive.SDK.Core.Arguments.OptionAttribute.html",
    "title": "Class OptionAttribute | NFive API Reference",
    "keywords": "Class OptionAttribute Inheritance Object Attribute OptionAttribute Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class OptionAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source OptionAttribute() Initializes a new instance of the OptionAttribute class. The default long name will be inferred from target property. Declaration public OptionAttribute() | Improve this Doc View Source OptionAttribute(Char) Initializes a new instance of the OptionAttribute class. Declaration public OptionAttribute(char shortName) Parameters Type Name Description Char shortName The short name of the option. | Improve this Doc View Source OptionAttribute(Char, String) Initializes a new instance of the OptionAttribute class. Declaration public OptionAttribute(char shortName, string longName) Parameters Type Name Description Char shortName The short name of the option. String longName The long name of the option or null if not used. | Improve this Doc View Source OptionAttribute(String) Initializes a new instance of the OptionAttribute class. Declaration public OptionAttribute(string longName) Parameters Type Name Description String longName The long name of the option. Properties | Improve this Doc View Source LongName Gets long name of this command line option. This name is usually a single english word. Declaration public string LongName { get; } Property Value Type Description String | Improve this Doc View Source ShortName Gets a short name of this command line option, made of one character. Declaration public string ShortName { get; } Property Value Type Description String"
  },
  "core/NFive.SDK.Core.Arguments.Argument.html": {
    "href": "core/NFive.SDK.Core.Arguments.Argument.html",
    "title": "Class Argument | NFive API Reference",
    "keywords": "Class Argument Inheritance Object Argument Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public static class Argument Methods | Improve this Doc View Source Parse<T>(IEnumerable<String>) Declaration public static T Parse<T>(IEnumerable<string> args) Parameters Type Name Description IEnumerable < String > args Returns Type Description T Type Parameters Name Description T"
  },
  "nfive/NFive.Server.Storage.StorageContext.html": {
    "href": "nfive/NFive.Server.Storage.StorageContext.html",
    "title": "Class StorageContext | NFive API Reference",
    "keywords": "Class StorageContext Inheritance Object StorageContext Namespace : NFive.Server.Storage Assembly : NFive.Server.net.dll Syntax public class StorageContext : EFContext<StorageContext> Properties | Improve this Doc View Source BootHistory Declaration public DbSet<BootHistory> BootHistory { get; set; } Property Value Type Description DbSet < BootHistory > | Improve this Doc View Source Sessions Declaration public DbSet<Session> Sessions { get; set; } Property Value Type Description DbSet < Session > | Improve this Doc View Source Users Declaration public DbSet<User> Users { get; set; } Property Value Type Description DbSet < User > Methods | Improve this Doc View Source OnModelCreating(DbModelBuilder) Declaration protected override void OnModelCreating(DbModelBuilder modelBuilder) Parameters Type Name Description DbModelBuilder modelBuilder"
  },
  "nfive/NFive.Server.Rpc.html": {
    "href": "nfive/NFive.Server.Rpc.html",
    "title": "Namespace NFive.Server.Rpc | NFive API Reference",
    "keywords": "Namespace NFive.Server.Rpc Classes Client InboundMessage OutboundMessage RpcManager RpcPacker"
  },
  "client/NFive.SDK.Client.Input.Input.html": {
    "href": "client/NFive.SDK.Client.Input.Input.html",
    "title": "Class Input | NFive API Reference",
    "keywords": "Class Input Inheritance Object Input Namespace : NFive.SDK.Client.Input Assembly : NFive.SDK.Client.net.dll Syntax public static class Input Fields | Improve this Doc View Source KeyMappings Declaration public static Dictionary<string, KeyCode> KeyMappings Field Value Type Description Dictionary < String , KeyCode > | Improve this Doc View Source UserMappings Declaration public static List<Hotkey> UserMappings Field Value Type Description List < Hotkey > Properties | Improve this Doc View Source ModifierFlagToKeyCode Declaration public static Dictionary<InputModifier, int> ModifierFlagToKeyCode { get; } Property Value Type Description Dictionary < InputModifier , Int32 > | Improve this Doc View Source WasLastInputFromController Declaration public static bool WasLastInputFromController { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source IsAnyControlJustPressed() Declaration public static bool IsAnyControlJustPressed() Returns Type Description Boolean | Improve this Doc View Source IsControlJustPressed(Control, Boolean, InputModifier) Declaration public static bool IsControlJustPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsControlJustReleased(Control, Boolean, InputModifier) Declaration public static bool IsControlJustReleased(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsControlModifierPressed(InputModifier) Declaration public static bool IsControlModifierPressed(InputModifier modifier) Parameters Type Name Description InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsControlPressed(Control, Boolean, InputModifier) Declaration public static bool IsControlPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsDisabledControlJustPressed(Control, Boolean, InputModifier) Declaration public static bool IsDisabledControlJustPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsDisabledControlJustReleased(Control, Boolean, InputModifier) Declaration public static bool IsDisabledControlJustReleased(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsDisabledControlPressed(Control, Boolean, InputModifier) Declaration public static bool IsDisabledControlPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsEnabledControlJustPressed(Control, Boolean, InputModifier) Declaration public static bool IsEnabledControlJustPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsEnabledControlJustReleased(Control, Boolean, InputModifier) Declaration public static bool IsEnabledControlJustReleased(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean | Improve this Doc View Source IsEnabledControlPressed(Control, Boolean, InputModifier) Declaration public static bool IsEnabledControlPressed(Control control, bool keyboardOnly = true, InputModifier modifier = InputModifier.None) Parameters Type Name Description Control control Boolean keyboardOnly InputModifier modifier Returns Type Description Boolean"
  },
  "client/NFive.SDK.Client.Input.Hotkey.html": {
    "href": "client/NFive.SDK.Client.Input.Hotkey.html",
    "title": "Class Hotkey | NFive API Reference",
    "keywords": "Class Hotkey Inheritance Object Hotkey Namespace : NFive.SDK.Client.Input Assembly : NFive.SDK.Client.net.dll Syntax public class Hotkey Constructors | Improve this Doc View Source Hotkey(Control) Declaration public Hotkey(Control control) Parameters Type Name Description Control control Properties | Improve this Doc View Source Control Declaration public Control Control { get; } Property Value Type Description Control | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description String | Improve this Doc View Source KeyCode Declaration public KeyCode KeyCode { get; } Property Value Type Description KeyCode | Improve this Doc View Source ScaleformName Declaration public string ScaleformName { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "client/NFive.SDK.Client.Events.FiveMClientEvents.html": {
    "href": "client/NFive.SDK.Client.Events.FiveMClientEvents.html",
    "title": "Class FiveMClientEvents | NFive API Reference",
    "keywords": "Class FiveMClientEvents Inheritance Object FiveMClientEvents Namespace : NFive.SDK.Client.Events Assembly : NFive.SDK.Client.net.dll Syntax public static class FiveMClientEvents Fields | Improve this Doc View Source PopulationPedCreating Declaration public const string PopulationPedCreating = \"populationPedCreating\" Field Value Type Description String | Improve this Doc View Source ResourceStart Declaration public const string ResourceStart = \"onClientResourceStart\" Field Value Type Description String | Improve this Doc View Source ResourceStop Declaration public const string ResourceStop = \"onClientResourceStop\" Field Value Type Description String"
  },
  "client/NFive.SDK.Client.Events.ClientEvents.html": {
    "href": "client/NFive.SDK.Client.Events.ClientEvents.html",
    "title": "Class ClientEvents | NFive API Reference",
    "keywords": "Class ClientEvents Inheritance Object ClientEvents Namespace : NFive.SDK.Client.Events Assembly : NFive.SDK.Client.net.dll Syntax public class ClientEvents Fields | Improve this Doc View Source PopulationPedCreating Declaration public const string PopulationPedCreating = \"nfive:client:populationPedCreating\" Field Value Type Description String | Improve this Doc View Source ResourceStart Declaration public const string ResourceStart = \"nfive:client:resourceStart\" Field Value Type Description String | Improve this Doc View Source ResourceStop Declaration public const string ResourceStop = \"nfive:client:resourceStop\" Field Value Type Description String"
  },
  "client/NFive.SDK.Client.Configuration.html": {
    "href": "client/NFive.SDK.Client.Configuration.html",
    "title": "Namespace NFive.SDK.Client.Configuration | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Configuration Classes ClientConfiguration LogConfiguration"
  },
  "client/NFive.SDK.Client.Configuration.LogConfiguration.html": {
    "href": "client/NFive.SDK.Client.Configuration.LogConfiguration.html",
    "title": "Class LogConfiguration | NFive API Reference",
    "keywords": "Class LogConfiguration Inheritance Object LogConfiguration Namespace : NFive.SDK.Client.Configuration Assembly : NFive.SDK.Client.net.dll Syntax public class LogConfiguration Properties | Improve this Doc View Source ConsoleLogLevel Declaration public LogLevel ConsoleLogLevel { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source MirrorLogLevel Declaration public LogLevel MirrorLogLevel { get; set; } Property Value Type Description LogLevel"
  },
  "client/NFive.SDK.Client.Configuration.ClientConfiguration.html": {
    "href": "client/NFive.SDK.Client.Configuration.ClientConfiguration.html",
    "title": "Class ClientConfiguration | NFive API Reference",
    "keywords": "Class ClientConfiguration Inheritance Object ClientConfiguration Namespace : NFive.SDK.Client.Configuration Assembly : NFive.SDK.Client.net.dll Syntax public static class ClientConfiguration Properties | Improve this Doc View Source Locale Declaration public static LocaleConfiguration Locale { get; set; } Property Value Type Description LocaleConfiguration | Improve this Doc View Source Log Declaration public static LogConfiguration Log { get; set; } Property Value Type Description LogConfiguration"
  },
  "client/NFive.SDK.Client.Communications.html": {
    "href": "client/NFive.SDK.Client.Communications.html",
    "title": "Namespace NFive.SDK.Client.Communications | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Communications Interfaces ICommunicationManager ICommunicationMessage ICommunicationReceive ICommunicationReceiveClient ICommunicationReceiveServer ICommunicationTarget ICommunicationTransmit ICommunicationTransmitClient ICommunicationTransmitServer"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationTransmitServer.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationTransmitServer.html",
    "title": "Interface ICommunicationTransmitServer | NFive API Reference",
    "keywords": "Interface ICommunicationTransmitServer Inherited Members ICommunicationTransmit.Emit(Object[]) ICommunicationTransmit.Request<TReturn>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationTransmitServer : ICommunicationTransmit"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationTransmitClient.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationTransmitClient.html",
    "title": "Interface ICommunicationTransmitClient | NFive API Reference",
    "keywords": "Interface ICommunicationTransmitClient Inherited Members ICommunicationTransmit.Emit(Object[]) ICommunicationTransmit.Request<TReturn>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationTransmitClient : ICommunicationTransmit"
  },
  "client/NFive.SDK.Client.Commands.ICommandManager.html": {
    "href": "client/NFive.SDK.Client.Commands.ICommandManager.html",
    "title": "Interface ICommandManager | NFive API Reference",
    "keywords": "Interface ICommandManager Namespace : NFive.SDK.Client.Commands Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommandManager Methods | Improve this Doc View Source On(String, Action) Declaration void On(string command, Action action) Parameters Type Name Description String command Action action | Improve this Doc View Source On(String, Action<IEnumerable<String>>) Declaration void On(string command, Action<IEnumerable<string>> action) Parameters Type Name Description String command Action < IEnumerable < String >> action | Improve this Doc View Source On(String, Action<String>) Declaration void On(string command, Action<string> action) Parameters Type Name Description String command Action < String > action"
  },
  "client/NFive.SDK.Client.ClientPluginAttribute.html": {
    "href": "client/NFive.SDK.Client.ClientPluginAttribute.html",
    "title": "Class ClientPluginAttribute | NFive API Reference",
    "keywords": "Class ClientPluginAttribute Specifies the client SDK version number the assembly was built against. Inheritance Object ClientPluginAttribute Namespace : NFive.SDK.Client Assembly : NFive.SDK.Client.net.dll Syntax public class ClientPluginAttribute : PluginAttribute Constructors | Improve this Doc View Source ClientPluginAttribute(UInt32) Initializes a new instance of the ClientPluginAttribute class. Declaration public ClientPluginAttribute(uint target) Parameters Type Name Description UInt32 target The target client SDK version number."
  },
  "core/NFive.SDK.Core.html": {
    "href": "core/NFive.SDK.Core.html",
    "title": "Namespace NFive.SDK.Core | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core Classes PluginAttribute Specifies the SDK version number the assembly was built against."
  },
  "core/NFive.SDK.Core.Utilities.html": {
    "href": "core/NFive.SDK.Core.Utilities.html",
    "title": "Namespace NFive.SDK.Core.Utilities | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Utilities Classes Serializer Utilities to convert objects to and from JSON strings."
  },
  "core/NFive.SDK.Core.Utilities.Serializer.html": {
    "href": "core/NFive.SDK.Core.Utilities.Serializer.html",
    "title": "Class Serializer | NFive API Reference",
    "keywords": "Class Serializer Utilities to convert objects to and from JSON strings. Inheritance Object Serializer Namespace : NFive.SDK.Core.Utilities Assembly : NFive.SDK.Core.net.dll Syntax public class Serializer Methods | Improve this Doc View Source Deserialize<T>(String) Deserializes the specified JSON to a type. Declaration public T Deserialize<T>(string json) Parameters Type Name Description String json The JSON to deserialize. Returns Type Description T The deserialized object. Type Parameters Name Description T The type to deserialize the JSON as. | Improve this Doc View Source Serialize(Object) Serializes the specified object to JSON. Declaration public string Serialize(object obj) Parameters Type Name Description Object obj The object to serialize. Returns Type Description String The JSON representation of the object."
  },
  "core/NFive.SDK.Core.Plugins.html": {
    "href": "core/NFive.SDK.Core.Plugins.html",
    "title": "Namespace NFive.SDK.Core.Plugins | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Plugins Classes Client Client file requirements for a plugin. Name Represents a plugin name, composed of the vendor and project. Plugin Represents a NFive plugin configuration. Repository Repository configuration for a plugin. Server Server file requirements for a plugin. Version Represents a semantic version number. VersionRange Represents a semantic version range."
  },
  "core/NFive.SDK.Core.Plugins.VersionRange.html": {
    "href": "core/NFive.SDK.Core.Plugins.VersionRange.html",
    "title": "Class VersionRange | NFive API Reference",
    "keywords": "Class VersionRange Represents a semantic version range. Inheritance Object VersionRange Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class VersionRange Properties | Improve this Doc View Source Value Gets or sets the version range. Declaration public string Value { get; set; } Property Value Type Description String The version range. Methods | Improve this Doc View Source ToString() Returns a String that represents this version range. Declaration public override string ToString() Returns Type Description String A String that represents this version range. Overrides Object.ToString()"
  },
  "core/NFive.SDK.Core.Models.Player.Session.html": {
    "href": "core/NFive.SDK.Core.Models.Player.Session.html",
    "title": "Class Session | NFive API Reference",
    "keywords": "Class Session Session model representing a user's connection to the server. Inheritance Object Session Namespace : NFive.SDK.Core.Models.Player Assembly : NFive.SDK.Core.net.dll Syntax public class Session Properties | Improve this Doc View Source Connected Gets or sets the timestamp of when the client connected to the session. Declaration public DateTime? Connected { get; set; } Property Value Type Description Nullable < DateTime > The timestamp of when the client connected to the session. | Improve this Doc View Source Created Gets or sets the timestamp of when the session was created. Declaration [Required] public DateTime Created { get; set; } Property Value Type Description DateTime The timestamp of when the session was created. | Improve this Doc View Source Disconnected Gets or sets the timestamp of when the client disconnected from the session. Declaration public DateTime? Disconnected { get; set; } Property Value Type Description Nullable < DateTime > The timestamp of when the client disconnected from the session. | Improve this Doc View Source DisconnectReason Gets or sets the reason the client disconnected. Declaration [StringLength(200)] public string DisconnectReason { get; set; } Property Value Type Description String The reason the client disconnected. | Improve this Doc View Source Handle Gets or sets the handle of the connected client. Declaration [NotMapped] public int Handle { get; set; } Property Value Type Description Int32 The handle of the connected client. | Improve this Doc View Source Id Gets or sets the session identifier. Declaration [Key] [Required] public Guid Id { get; set; } Property Value Type Description Guid The session identifier. | Improve this Doc View Source IpAddress Gets or sets the IP address of the connected client. Declaration [Required] [StringLength(47, MinimumLength = 5)] public string IpAddress { get; set; } Property Value Type Description String The IP address of the connected client. | Improve this Doc View Source IsConnected Gets a value indicating whether a client is currently connected. Declaration public bool IsConnected { get; } Property Value Type Description Boolean true if a client is currently is connected; otherwise, false . | Improve this Doc View Source User Gets or sets the user which owns the session. Declaration public virtual User User { get; set; } Property Value Type Description User The user which owns the session. | Improve this Doc View Source UserId Gets or sets the user identifier. Declaration [Required] [ForeignKey(\"User\")] public Guid UserId { get; set; } Property Value Type Description Guid The user identifier."
  },
  "core/NFive.SDK.Core.Models.IdentityModel.html": {
    "href": "core/NFive.SDK.Core.Models.IdentityModel.html",
    "title": "Class IdentityModel | NFive API Reference",
    "keywords": "Class IdentityModel Represents the key properties for a stored model. Inheritance Object IdentityModel User Implements IIdentityModel Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax public abstract class IdentityModel : IIdentityModel Constructors | Improve this Doc View Source IdentityModel() Initializes a new instance of the IdentityModel class. Declaration protected IdentityModel() Properties | Improve this Doc View Source Created Gets or sets the timestamp of when the model was created. Declaration [Required] public DateTime Created { get; set; } Property Value Type Description DateTime The timestamp of when the model was created. | Improve this Doc View Source Deleted Gets or sets the timestamp of when the model was deleted. Declaration public DateTime? Deleted { get; set; } Property Value Type Description Nullable < DateTime > The timestamp of when the model was deleted. | Improve this Doc View Source Id Gets or sets the model identifier. Declaration [Key] [Required] public Guid Id { get; set; } Property Value Type Description Guid The model identifier. Implements IIdentityModel"
  },
  "core/NFive.SDK.Core.Models.IIdentityModel.html": {
    "href": "core/NFive.SDK.Core.Models.IIdentityModel.html",
    "title": "Interface IIdentityModel | NFive API Reference",
    "keywords": "Interface IIdentityModel Represents the key properties for a stored model. Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax public interface IIdentityModel Properties | Improve this Doc View Source Created Gets or sets the timestamp of when the model was created. Declaration DateTime Created { get; set; } Property Value Type Description DateTime The timestamp of when the model was created. | Improve this Doc View Source Deleted Gets or sets the timestamp of when the model was deleted. Declaration DateTime? Deleted { get; set; } Property Value Type Description Nullable < DateTime > The timestamp of when the model was deleted. | Improve this Doc View Source Id Gets or sets the model identifier. Declaration Guid Id { get; set; } Property Value Type Description Guid The model identifier."
  },
  "core/NFive.SDK.Core.Locales.ILocaleCatalog.html": {
    "href": "core/NFive.SDK.Core.Locales.ILocaleCatalog.html",
    "title": "Interface ILocaleCatalog | NFive API Reference",
    "keywords": "Interface ILocaleCatalog Namespace : NFive.SDK.Core.Locales Assembly : NFive.SDK.Core.net.dll Syntax public interface ILocaleCatalog Properties | Improve this Doc View Source Culture Declaration CultureInfo Culture { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64) Declaration string GetParticularPluralString(string context, string text, string pluralText, long n) Parameters Type Name Description String context String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64, Object[]) Declaration string GetParticularPluralString(string context, string text, string pluralText, long n, params object[] args) Parameters Type Name Description String context String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetParticularString(String, String) Declaration string GetParticularString(string context, string text) Parameters Type Name Description String context String text Returns Type Description String | Improve this Doc View Source GetParticularString(String, String, Object[]) Declaration string GetParticularString(string context, string text, params object[] args) Parameters Type Name Description String context String text Object [] args Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64) Declaration string GetPluralString(string text, string pluralText, long n) Parameters Type Name Description String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64, Object[]) Declaration string GetPluralString(string text, string pluralText, long n, params object[] args) Parameters Type Name Description String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetString(String) Declaration string GetString(string text) Parameters Type Name Description String text Returns Type Description String | Improve this Doc View Source GetString(String, Object[]) Declaration string GetString(string text, params object[] args) Parameters Type Name Description String text Object [] args Returns Type Description String"
  },
  "core/NFive.SDK.Core.Helpers.html": {
    "href": "core/NFive.SDK.Core.Helpers.html",
    "title": "Namespace NFive.SDK.Core.Helpers | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Helpers Classes GuidGenerator Utility for generating MySQL optimized globally unique identifiers. MathHelpers"
  },
  "core/NFive.SDK.Core.Helpers.MathHelpers.html": {
    "href": "core/NFive.SDK.Core.Helpers.MathHelpers.html",
    "title": "Class MathHelpers | NFive API Reference",
    "keywords": "Class MathHelpers Inheritance Object MathHelpers Namespace : NFive.SDK.Core.Helpers Assembly : NFive.SDK.Core.net.dll Syntax public static class MathHelpers Methods | Improve this Doc View Source Lerp(Single, Single, Single) Declaration public static float Lerp(float v0, float v1, float interval) Parameters Type Name Description Single v0 Single v1 Single interval Returns Type Description Single"
  },
  "core/NFive.SDK.Core.Helpers.GuidGenerator.html": {
    "href": "core/NFive.SDK.Core.Helpers.GuidGenerator.html",
    "title": "Class GuidGenerator | NFive API Reference",
    "keywords": "Class GuidGenerator Utility for generating MySQL optimized globally unique identifiers. Inheritance Object GuidGenerator Namespace : NFive.SDK.Core.Helpers Assembly : NFive.SDK.Core.net.dll Syntax public static class GuidGenerator Methods | Improve this Doc View Source GenerateTimeBasedGuid() Generates a time based globally unique identifier optimized for MySQL. Declaration public static Guid GenerateTimeBasedGuid() Returns Type Description Guid The generated GUID."
  },
  "core/NFive.SDK.Core.Extensions.StringExtensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | NFive API Reference",
    "keywords": "Class StringExtensions Inheritance Object StringExtensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source Pluralize(String, Int32, String, CultureInfo) Declaration public static string Pluralize(this string str, int value, string extension = \"s\", CultureInfo culture = null) Parameters Type Name Description String str Int32 value String extension CultureInfo culture Returns Type Description String"
  },
  "core/NFive.SDK.Core.Extensions.PositionExtensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions | NFive API Reference",
    "keywords": "Class PositionExtensions Inheritance Object PositionExtensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax [Obsolete] public static class PositionExtensions Methods | Improve this Doc View Source InFrontOf(Position, Single, Single) Declaration public static Position InFrontOf(this Position position, float heading, float distance) Parameters Type Name Description Position position Single heading Single distance Returns Type Description Position | Improve this Doc View Source Lerp(Position, Position, Single) Declaration public static Position Lerp(this Position pos1, Position pos2, float normalizedInterval) Parameters Type Name Description Position pos1 Position pos2 Single normalizedInterval Returns Type Description Position | Improve this Doc View Source ToVector3(Position) Declaration public static Vector3 ToVector3(this Position pos) Parameters Type Name Description Position pos Returns Type Description Vector3 | Improve this Doc View Source TranslateDir(Position, Single, Single) Declaration public static Position TranslateDir(this Position pos, float angleInDegrees, float distance) Parameters Type Name Description Position pos Single angleInDegrees Single distance Returns Type Description Position"
  },
  "core/NFive.SDK.Core.Extensions.NumericExtensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.NumericExtensions.html",
    "title": "Class NumericExtensions | NFive API Reference",
    "keywords": "Class NumericExtensions Inheritance Object NumericExtensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax public static class NumericExtensions Methods | Improve this Doc View Source IsBetween(Single, Single, Single) Declaration public static bool IsBetween(this float val, float min, float max) Parameters Type Name Description Single val Single min Single max Returns Type Description Boolean | Improve this Doc View Source Lerp(Single, Single, Single) Declaration public static float Lerp(this float v0, float v1, float interval) Parameters Type Name Description Single v0 Single v1 Single interval Returns Type Description Single | Improve this Doc View Source ToRadians(Single) Declaration public static double ToRadians(this float val) Parameters Type Name Description Single val Returns Type Description Double"
  },
  "core/NFive.SDK.Core.Events.html": {
    "href": "core/NFive.SDK.Core.Events.html",
    "title": "Namespace NFive.SDK.Core.Events | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Events Classes CoreEvents Core NFive events."
  },
  "core/NFive.SDK.Core.Controllers.html": {
    "href": "core/NFive.SDK.Core.Controllers.html",
    "title": "Namespace NFive.SDK.Core.Controllers | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Controllers Classes ControllerConfiguration Represents the configuration that is automatically loaded into a ConfigurableController . Interfaces IControllerConfiguration Represents the configuration that is automatically loaded into a ConfigurableController ."
  },
  "core/NFive.SDK.Core.Controllers.IControllerConfiguration.html": {
    "href": "core/NFive.SDK.Core.Controllers.IControllerConfiguration.html",
    "title": "Interface IControllerConfiguration | NFive API Reference",
    "keywords": "Interface IControllerConfiguration Represents the configuration that is automatically loaded into a ConfigurableController . Namespace : NFive.SDK.Core.Controllers Assembly : NFive.SDK.Core.net.dll Syntax public interface IControllerConfiguration Properties | Improve this Doc View Source FileName Gets the name of the file this configuration is saved as. Declaration string FileName { get; } Property Value Type Description String The name of the file without the extension."
  },
  "core/NFive.SDK.Core.Controllers.ControllerConfiguration.html": {
    "href": "core/NFive.SDK.Core.Controllers.ControllerConfiguration.html",
    "title": "Class ControllerConfiguration | NFive API Reference",
    "keywords": "Class ControllerConfiguration Represents the configuration that is automatically loaded into a ConfigurableController . Inheritance Object ControllerConfiguration Implements IControllerConfiguration Namespace : NFive.SDK.Core.Controllers Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public abstract class ControllerConfiguration : IControllerConfiguration Properties | Improve this Doc View Source FileName Gets the name of the file this configuration is saved as. Declaration public virtual string FileName { get; } Property Value Type Description String The name of the file without the extension. Implements IControllerConfiguration See Also IControllerConfiguration"
  },
  "core/NFive.SDK.Core.Configuration.html": {
    "href": "core/NFive.SDK.Core.Configuration.html",
    "title": "Namespace NFive.SDK.Core.Configuration | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Configuration Classes LocaleConfiguration"
  },
  "core/NFive.SDK.Core.Arguments.html": {
    "href": "core/NFive.SDK.Core.Arguments.html",
    "title": "Namespace NFive.SDK.Core.Arguments | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Arguments Classes Argument Argument.Arg OptionAttribute OptionSpecification Specification ValueAttribute ValueSpecification Enums SpecificationType"
  },
  "core/NFive.SDK.Core.Arguments.ValueSpecification.html": {
    "href": "core/NFive.SDK.Core.Arguments.ValueSpecification.html",
    "title": "Class ValueSpecification | NFive API Reference",
    "keywords": "Class ValueSpecification Inheritance Object Specification ValueSpecification Inherited Members Specification.Property Specification.Tag Specification.Required Specification.FromProperty(PropertyInfo) Namespace : NFive.SDK.Core.Arguments Assembly : NFive.SDK.Core.net.dll Syntax public sealed class ValueSpecification : Specification Constructors | Improve this Doc View Source ValueSpecification(PropertyInfo, Int32, Boolean) Declaration public ValueSpecification(PropertyInfo property, int index, bool required) Parameters Type Name Description PropertyInfo property Int32 index Boolean required Properties | Improve this Doc View Source Index Declaration public int Index { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FromAttribute(PropertyInfo, ValueAttribute, Type, IEnumerable<String>) Declaration public static ValueSpecification FromAttribute(PropertyInfo property, ValueAttribute attribute, Type conversionType, IEnumerable<string> enumValues) Parameters Type Name Description PropertyInfo property ValueAttribute attribute Type conversionType IEnumerable < String > enumValues Returns Type Description ValueSpecification"
  },
  "nfive/NFive.Server.Controllers.SessionController.html": {
    "href": "nfive/NFive.Server.Controllers.SessionController.html",
    "title": "Class SessionController | NFive API Reference",
    "keywords": "Class SessionController Inheritance Object SessionController Namespace : NFive.Server.Controllers Assembly : NFive.Server.net.dll Syntax public class SessionController : ConfigurableController<SessionConfiguration> Constructors | Improve this Doc View Source SessionController(ILogger, SessionConfiguration, ICommunicationManager) Declaration public SessionController(ILogger logger, SessionConfiguration configuration, ICommunicationManager comms) Parameters Type Name Description ILogger logger SessionConfiguration configuration ICommunicationManager comms Methods | Improve this Doc View Source Loaded() Declaration public override Task Loaded() Returns Type Description Task | Improve this Doc View Source Started() Declaration public override Task Started() Returns Type Description Task"
  },
  "nfive/NFive.Server.Controllers.EventController.html": {
    "href": "nfive/NFive.Server.Controllers.EventController.html",
    "title": "Class EventController | NFive API Reference",
    "keywords": "Class EventController Inheritance Object EventController Namespace : NFive.Server.Controllers Assembly : NFive.Server.net.dll Syntax public class EventController : Controller Constructors | Improve this Doc View Source EventController(ILogger, ICommunicationManager) Declaration public EventController(ILogger logger, ICommunicationManager comms) Parameters Type Name Description ILogger logger ICommunicationManager comms Methods | Improve this Doc View Source Loaded() Declaration public override Task Loaded() Returns Type Description Task"
  },
  "nfive/NFive.Server.Configuration.SessionConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.SessionConfiguration.html",
    "title": "Class SessionConfiguration | NFive API Reference",
    "keywords": "Class SessionConfiguration Inheritance Object SessionConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class SessionConfiguration : ControllerConfiguration Properties | Improve this Doc View Source ConnectionTimeout Declaration public TimeSpan ConnectionTimeout { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source FileName Declaration public override string FileName { get; } Property Value Type Description String | Improve this Doc View Source MaxClients Declaration public ushort MaxClients { get; } Property Value Type Description UInt16 | Improve this Doc View Source ReconnectGrace Declaration public TimeSpan ReconnectGrace { get; set; } Property Value Type Description TimeSpan"
  },
  "nfive/NFive.Server.Configuration.ServerLogConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.ServerLogConfiguration.html",
    "title": "Class ServerLogConfiguration | NFive API Reference",
    "keywords": "Class ServerLogConfiguration Inheritance Object ServerLogConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public static class ServerLogConfiguration : object Properties | Improve this Doc View Source Output Declaration public static CoreConfiguration.LogOutputConfiguration Output { get; set; } Property Value Type Description CoreConfiguration.LogOutputConfiguration"
  },
  "nfive/NFive.Server.Configuration.DatabaseConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.DatabaseConfiguration.html",
    "title": "Class DatabaseConfiguration | NFive API Reference",
    "keywords": "Class DatabaseConfiguration Inheritance Object DatabaseConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class DatabaseConfiguration : ControllerConfiguration Properties | Improve this Doc View Source BootHistory Declaration public DatabaseConfiguration.DatabaseBootHistoryConfiguration BootHistory { get; set; } Property Value Type Description DatabaseConfiguration.DatabaseBootHistoryConfiguration | Improve this Doc View Source Connection Declaration public DatabaseConfiguration.DatabaseConnectionConfiguration Connection { get; set; } Property Value Type Description DatabaseConfiguration.DatabaseConnectionConfiguration | Improve this Doc View Source FileName Declaration public override string FileName { get; } Property Value Type Description String | Improve this Doc View Source Migrations Declaration public DatabaseConfiguration.DatabaseMigrationsConfiguration Migrations { get; set; } Property Value Type Description DatabaseConfiguration.DatabaseMigrationsConfiguration"
  },
  "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseMigrationsConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseMigrationsConfiguration.html",
    "title": "Class DatabaseConfiguration.DatabaseMigrationsConfiguration | NFive API Reference",
    "keywords": "Class DatabaseConfiguration.DatabaseMigrationsConfiguration Inheritance Object DatabaseConfiguration.DatabaseMigrationsConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class DatabaseMigrationsConfiguration : object Properties | Improve this Doc View Source Automatic Declaration public bool Automatic { get; set; } Property Value Type Description Boolean"
  },
  "nfive/NFive.Server.Configuration.CoreConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.CoreConfiguration.html",
    "title": "Class CoreConfiguration | NFive API Reference",
    "keywords": "Class CoreConfiguration Inheritance Object CoreConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class CoreConfiguration : ControllerConfiguration Properties | Improve this Doc View Source Display Declaration public CoreConfiguration.DisplayConfiguration Display { get; set; } Property Value Type Description CoreConfiguration.DisplayConfiguration | Improve this Doc View Source FileName Declaration public override string FileName { get; } Property Value Type Description String | Improve this Doc View Source Locale Declaration public LocaleConfiguration Locale { get; set; } Property Value Type Description LocaleConfiguration | Improve this Doc View Source Log Declaration public CoreConfiguration.LogConfiguration Log { get; set; } Property Value Type Description CoreConfiguration.LogConfiguration"
  },
  "nfive/NFive.Server.Configuration.CoreConfiguration.LogOutputConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.CoreConfiguration.LogOutputConfiguration.html",
    "title": "Class CoreConfiguration.LogOutputConfiguration | NFive API Reference",
    "keywords": "Class CoreConfiguration.LogOutputConfiguration Inheritance Object CoreConfiguration.LogOutputConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class LogOutputConfiguration : object Properties | Improve this Doc View Source ClientConsole Declaration public LogLevel ClientConsole { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source ClientMirror Declaration public LogLevel ClientMirror { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source ServerConsole Declaration public LogLevel ServerConsole { get; set; } Property Value Type Description LogLevel"
  },
  "server/NFive.SDK.Server.Events.ClientSessionEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientSessionEventArgs.html",
    "title": "Class ClientSessionEventArgs | NFive API Reference",
    "keywords": "Class ClientSessionEventArgs Inheritance Object EventArgs ClientEventArgs ClientSessionEventArgs ClientSessionDeferralsEventArgs Inherited Members ClientEventArgs.Client EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientSessionEventArgs : ClientEventArgs Constructors | Improve this Doc View Source ClientSessionEventArgs(IClient, Session) Initializes a new instance of the ClientSessionEventArgs class. Declaration public ClientSessionEventArgs(IClient client, Session session) Parameters Type Name Description IClient client The client. Session session The session. Properties | Improve this Doc View Source Session Gets the session. Declaration public Session Session { get; } Property Value Type Description Session The session."
  },
  "server/NFive.SDK.Server.Events.ClientSessionDeferralsEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientSessionDeferralsEventArgs.html",
    "title": "Class ClientSessionDeferralsEventArgs | NFive API Reference",
    "keywords": "Class ClientSessionDeferralsEventArgs Inheritance Object EventArgs ClientEventArgs ClientSessionEventArgs ClientSessionDeferralsEventArgs Inherited Members ClientSessionEventArgs.Session ClientEventArgs.Client EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientSessionDeferralsEventArgs : ClientSessionEventArgs Constructors | Improve this Doc View Source ClientSessionDeferralsEventArgs(IClient, Session, IConnectionDeferrals) Initializes a new instance of the ClientSessionDeferralsEventArgs class. Declaration public ClientSessionDeferralsEventArgs(IClient client, Session session, IConnectionDeferrals deferrals) Parameters Type Name Description IClient client The client. Session session The session. IConnectionDeferrals deferrals The deferrals. Properties | Improve this Doc View Source Deferrals Gets the deferrals. Declaration public IConnectionDeferrals Deferrals { get; } Property Value Type Description IConnectionDeferrals The deferrals."
  },
  "server/NFive.SDK.Server.Configuration.ServerConfiguration.html": {
    "href": "server/NFive.SDK.Server.Configuration.ServerConfiguration.html",
    "title": "Class ServerConfiguration | NFive API Reference",
    "keywords": "Class ServerConfiguration Represents the core configuration of a server. Inheritance Object ServerConfiguration Namespace : NFive.SDK.Server.Configuration Assembly : NFive.SDK.Server.net.dll Syntax public static class ServerConfiguration Properties | Improve this Doc View Source AutomaticMigrations Gets or sets a value indicating whether automatic database migrations are enabled. Declaration public static bool AutomaticMigrations { get; set; } Property Value Type Description Boolean true if automatic database migrations are enabled; otherwise, false . | Improve this Doc View Source DatabaseConnection Gets or sets the database connection string. Declaration public static string DatabaseConnection { get; set; } Property Value Type Description String The database connection string. | Improve this Doc View Source Locale Declaration public static LocaleConfiguration Locale { get; set; } Property Value Type Description LocaleConfiguration | Improve this Doc View Source LogLevel Gets or sets the default log level. Declaration public static LogLevel LogLevel { get; set; } Property Value Type Description LogLevel The default log level."
  },
  "server/NFive.SDK.Server.Communications.html": {
    "href": "server/NFive.SDK.Server.Communications.html",
    "title": "Namespace NFive.SDK.Server.Communications | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Communications Interfaces IClient Represents a client connected to the server IClientList ICommunicationManager ICommunicationMessage ICommunicationReceive ICommunicationReceiveClient ICommunicationReceiveServer ICommunicationTarget ICommunicationTransmit ICommunicationTransmitClient ICommunicationTransmitServer"
  },
  "server/NFive.SDK.Server.Communications.ICommunicationTransmitServer.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationTransmitServer.html",
    "title": "Interface ICommunicationTransmitServer | NFive API Reference",
    "keywords": "Interface ICommunicationTransmitServer Inherited Members ICommunicationTransmit.Emit(Object[]) ICommunicationTransmit.Request<TReturn>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) ICommunicationTransmit.Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationTransmitServer : ICommunicationTransmit"
  },
  "server/NFive.SDK.Server.Communications.ICommunicationReceiveClient.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationReceiveClient.html",
    "title": "Interface ICommunicationReceiveClient | NFive API Reference",
    "keywords": "Interface ICommunicationReceiveClient Inherited Members ICommunicationReceive.On(Action<ICommunicationMessage>) ICommunicationReceive.On<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.On<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) ICommunicationReceive.OnRequest(Action<ICommunicationMessage>) ICommunicationReceive.OnRequest<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationReceiveClient : ICommunicationReceive"
  },
  "client/NFive.SDK.Client.Services.Service.html": {
    "href": "client/NFive.SDK.Client.Services.Service.html",
    "title": "Class Service | NFive API Reference",
    "keywords": "Class Service Inheritance Object Service Namespace : NFive.SDK.Client.Services Assembly : NFive.SDK.Client.net.dll Syntax public abstract class Service Constructors | Improve this Doc View Source Service(ILogger, ITickManager, ICommunicationManager, ICommandManager, OverlayManager, User) Declaration protected Service(ILogger logger, ITickManager ticks, ICommunicationManager comms, ICommandManager commands, OverlayManager overlayManager, User user) Parameters Type Name Description ILogger logger ITickManager ticks ICommunicationManager comms ICommandManager commands OverlayManager overlayManager User user Fields | Improve this Doc View Source Catalog Declaration protected static ILocaleCatalog Catalog Field Value Type Description ILocaleCatalog | Improve this Doc View Source Commands Declaration protected readonly ICommandManager Commands Field Value Type Description ICommandManager | Improve this Doc View Source Comms Declaration protected readonly ICommunicationManager Comms Field Value Type Description ICommunicationManager | Improve this Doc View Source Logger Declaration protected readonly ILogger Logger Field Value Type Description ILogger | Improve this Doc View Source OverlayManager Declaration protected readonly OverlayManager OverlayManager Field Value Type Description OverlayManager | Improve this Doc View Source Ticks Declaration protected readonly ITickManager Ticks Field Value Type Description ITickManager | Improve this Doc View Source User Declaration protected readonly User User Field Value Type Description User Methods | Improve this Doc View Source _(String) Declaration public static string _(string text) Parameters Type Name Description String text Returns Type Description String | Improve this Doc View Source _(String, Object[]) Declaration public static string _(string text, params object[] args) Parameters Type Name Description String text Object [] args Returns Type Description String | Improve this Doc View Source _n(String, String, Int64) Declaration public static string _n(string text, string pluralText, long n) Parameters Type Name Description String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source _n(String, String, Int64, Object[]) Declaration public static string _n(string text, string pluralText, long n, params object[] args) Parameters Type Name Description String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source _p(String, String) Declaration public static string _p(string context, string text) Parameters Type Name Description String context String text Returns Type Description String | Improve this Doc View Source _p(String, String, Object[]) Declaration public static string _p(string context, string text, params object[] args) Parameters Type Name Description String context String text Object [] args Returns Type Description String | Improve this Doc View Source _pn(String, String, String, Int64) Declaration public static string _pn(string context, string text, string pluralText, long n) Parameters Type Name Description String context String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source _pn(String, String, String, Int64, Object[]) Declaration public static string _pn(string context, string text, string pluralText, long n, params object[] args) Parameters Type Name Description String context String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source Delay(Int32) Declaration protected Task Delay(int ms) Parameters Type Name Description Int32 ms Returns Type Description Task | Improve this Doc View Source Delay(TimeSpan) Declaration protected Task Delay(TimeSpan delay) Parameters Type Name Description TimeSpan delay Returns Type Description Task | Improve this Doc View Source HoldFocus() Declaration public virtual Task HoldFocus() Returns Type Description Task | Improve this Doc View Source Loaded() Declaration public virtual Task Loaded() Returns Type Description Task | Improve this Doc View Source Started() Declaration public virtual Task Started() Returns Type Description Task"
  },
  "client/NFive.SDK.Client.SDK.html": {
    "href": "client/NFive.SDK.Client.SDK.html",
    "title": "Class SDK | NFive API Reference",
    "keywords": "Class SDK Client SDK constants. Inheritance Object SDK Namespace : NFive.SDK.Client Assembly : NFive.SDK.Client.net.dll Syntax public static class SDK Fields | Improve this Doc View Source Version The client SDK version number. Declaration public const int Version = 1 Field Value Type Description Int32"
  },
  "client/NFive.SDK.Client.Locales.html": {
    "href": "client/NFive.SDK.Client.Locales.html",
    "title": "Namespace NFive.SDK.Client.Locales | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Locales Classes LocaleCatalog"
  },
  "client/NFive.SDK.Client.Locales.LocaleCatalog.html": {
    "href": "client/NFive.SDK.Client.Locales.LocaleCatalog.html",
    "title": "Class LocaleCatalog | NFive API Reference",
    "keywords": "Class LocaleCatalog Inheritance Object LocaleCatalog Namespace : NFive.SDK.Client.Locales Assembly : NFive.SDK.Client.net.dll Syntax public class LocaleCatalog : ILocaleCatalog Constructors | Improve this Doc View Source LocaleCatalog(Catalog) Declaration public LocaleCatalog(Catalog catalog) Parameters Type Name Description Catalog catalog Properties | Improve this Doc View Source Culture Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64) Declaration public string GetParticularPluralString(string context, string text, string pluralText, long n) Parameters Type Name Description String context String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64, Object[]) Declaration public string GetParticularPluralString(string context, string text, string pluralText, long n, params object[] args) Parameters Type Name Description String context String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetParticularString(String, String) Declaration public string GetParticularString(string context, string text) Parameters Type Name Description String context String text Returns Type Description String | Improve this Doc View Source GetParticularString(String, String, Object[]) Declaration public string GetParticularString(string context, string text, params object[] args) Parameters Type Name Description String context String text Object [] args Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64) Declaration public string GetPluralString(string text, string pluralText, long n) Parameters Type Name Description String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64, Object[]) Declaration public string GetPluralString(string text, string pluralText, long n, params object[] args) Parameters Type Name Description String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetString(String) Declaration public string GetString(string text) Parameters Type Name Description String text Returns Type Description String | Improve this Doc View Source GetString(String, Object[]) Declaration public string GetString(string text, params object[] args) Parameters Type Name Description String text Object [] args Returns Type Description String"
  },
  "client/NFive.SDK.Client.Interface.html": {
    "href": "client/NFive.SDK.Client.Interface.html",
    "title": "Namespace NFive.SDK.Client.Interface | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Interface Classes NuiManager Overlay OverlayEventArgs OverlayManager Interfaces INuiManager IOverlay"
  },
  "client/NFive.SDK.Client.Interface.OverlayManager.html": {
    "href": "client/NFive.SDK.Client.Interface.OverlayManager.html",
    "title": "Class OverlayManager | NFive API Reference",
    "keywords": "Class OverlayManager Inheritance Object OverlayManager Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public class OverlayManager Constructors | Improve this Doc View Source OverlayManager(String, INuiManager) Declaration public OverlayManager(string plugin, INuiManager nui) Parameters Type Name Description String plugin INuiManager nui Properties | Improve this Doc View Source Nui Declaration public INuiManager Nui { get; } Property Value Type Description INuiManager | Improve this Doc View Source Plugin Declaration public string Plugin { get; } Property Value Type Description String Methods | Improve this Doc View Source Emit(String, Object) Declaration public void Emit(string event, object data = null) Parameters Type Name Description String event Object data | Improve this Doc View Source On(String, Action) Declaration public void On(string event, Action action) Parameters Type Name Description String event Action action | Improve this Doc View Source On<T>(String, Action<T>) Declaration public void On<T>(string event, Action<T> action) Parameters Type Name Description String event Action <T> action Type Parameters Name Description T | Improve this Doc View Source On<TReturn>(String, Func<TReturn>) Declaration public void On<TReturn>(string event, Func<TReturn> action) Parameters Type Name Description String event Func <TReturn> action Type Parameters Name Description TReturn | Improve this Doc View Source On<T, TReturn>(String, Func<T, TReturn>) Declaration public void On<T, TReturn>(string event, Func<T, TReturn> action) Parameters Type Name Description String event Func <T, TReturn> action Type Parameters Name Description T TReturn"
  },
  "client/NFive.SDK.Client.Interface.OverlayEventArgs.html": {
    "href": "client/NFive.SDK.Client.Interface.OverlayEventArgs.html",
    "title": "Class OverlayEventArgs | NFive API Reference",
    "keywords": "Class OverlayEventArgs Inheritance Object EventArgs OverlayEventArgs Inherited Members EventArgs.Empty Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public class OverlayEventArgs : EventArgs Constructors | Improve this Doc View Source OverlayEventArgs(Overlay) Declaration public OverlayEventArgs(Overlay overlay) Parameters Type Name Description Overlay overlay Properties | Improve this Doc View Source Overlay Declaration public Overlay Overlay { get; protected set; } Property Value Type Description Overlay"
  },
  "core/NFive.SDK.Core.Plugins.Plugin.html": {
    "href": "core/NFive.SDK.Core.Plugins.Plugin.html",
    "title": "Class Plugin | NFive API Reference",
    "keywords": "Class Plugin Represents a NFive plugin configuration. Inheritance Object Plugin Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Plugin Properties | Improve this Doc View Source Author Gets or sets the plugin author. Declaration public string Author { get; set; } Property Value Type Description String The plugin author. | Improve this Doc View Source Client Gets or sets the client requirements. Declaration public Client Client { get; set; } Property Value Type Description Client The client requirements. | Improve this Doc View Source Dependencies Gets or sets the dependencies required by this plugin. Declaration public Dictionary<Name, VersionRange> Dependencies { get; set; } Property Value Type Description Dictionary < Name , VersionRange > The dependencies required by this plugin. | Improve this Doc View Source Description Gets or sets the plugin description. Declaration public string Description { get; set; } Property Value Type Description String The plugin description. | Improve this Doc View Source FullName Gets the full plugin name. Declaration public string FullName { get; } Property Value Type Description String The full plugin name, composed of the Name and Version . | Improve this Doc View Source License Gets or sets the plugin software license. Declaration public string License { get; set; } Property Value Type Description String The plugin software license. | Improve this Doc View Source Name Gets or sets the plugin name. Declaration public Name Name { get; set; } Property Value Type Description Name The plugin name. Remarks The plugin name must be globally unique. | Improve this Doc View Source Repositories Gets or sets the repositories used to locate dependencies. Declaration public List<Repository> Repositories { get; set; } Property Value Type Description List < Repository > The repositories used to locate dependencies. | Improve this Doc View Source Server Gets or sets the server requirements. Declaration public Server Server { get; set; } Property Value Type Description Server The server requirements. | Improve this Doc View Source Version Gets or sets the plugin version. Declaration public Version Version { get; set; } Property Value Type Description Version The plugin version. | Improve this Doc View Source Website Gets or sets the plugin website. Declaration public string Website { get; set; } Property Value Type Description String The plugin website. Methods | Improve this Doc View Source ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "core/NFive.SDK.Core.Plugins.Name.html": {
    "href": "core/NFive.SDK.Core.Plugins.Name.html",
    "title": "Class Name | NFive API Reference",
    "keywords": "Class Name Represents a plugin name, composed of the vendor and project. Inheritance Object Name Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Name Constructors | Improve this Doc View Source Name() Initializes a new instance of the Name class. Declaration public Name() | Improve this Doc View Source Name(String) Initializes a new instance of the Name class from a name string. Declaration public Name(string value) Parameters Type Name Description String value The plugin name string. Exceptions Type Condition ArgumentNullException Plugin name must be in &quot;vendor/project&quot; format. ArgumentException Invalid plugin name format, plugin name must be in &quot;vendor/project&quot; format. Properties | Improve this Doc View Source Project Gets or sets the plugin name project. Declaration public string Project { get; set; } Property Value Type Description String The plugin name project. | Improve this Doc View Source Vendor Gets or sets the plugin name vendor. Declaration public string Vendor { get; set; } Property Value Type Description String The plugin name vendor. Methods | Improve this Doc View Source Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Returns a formatted String that represents this plugin name. Declaration public override string ToString() Returns Type Description String A formatted String that represents this plugin name. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Name, Name) This method determines whether two Names have the same value. Declaration public static bool operator ==(Name a, Name b) Parameters Type Name Description Name a Name b Returns Type Description Boolean See Also Inequality(Name, Name) Equals(Object) | Improve this Doc View Source Implicit(Name to String) Performs an implicit conversion from Name to String . Declaration public static implicit operator string (Name value) Parameters Type Name Description Name value The value to convert. Returns Type Description String The result of the conversion. | Improve this Doc View Source Implicit(String to Name) Performs an implicit conversion from String to Name . Declaration public static implicit operator Name(string value) Parameters Type Name Description String value The string to convert. Returns Type Description Name The result of the conversion. | Improve this Doc View Source Inequality(Name, Name) This method determines whether two Names do not have the same value. Declaration public static bool operator !=(Name a, Name b) Parameters Type Name Description Name a Name b Returns Type Description Boolean See Also Equality(Name, Name) Equals(Object)"
  },
  "core/NFive.SDK.Core.Plugins.Client.html": {
    "href": "core/NFive.SDK.Core.Plugins.Client.html",
    "title": "Class Client | NFive API Reference",
    "keywords": "Class Client Client file requirements for a plugin. Inheritance Object Client Namespace : NFive.SDK.Core.Plugins Assembly : NFive.SDK.Core.net.dll Syntax [Serializable] public class Client Properties | Improve this Doc View Source Files Gets or sets the client plugin general files. Declaration public List<string> Files { get; set; } Property Value Type Description List < String > The client plugin general files. | Improve this Doc View Source Include Gets or sets the client plugin include files. Declaration public List<string> Include { get; set; } Property Value Type Description List < String > The client plugin include files. | Improve this Doc View Source LoadingScreen Gets or sets the client plugin loading screen file. Declaration public string LoadingScreen { get; set; } Property Value Type Description String The client plugin loading screen file. | Improve this Doc View Source Main Gets or sets the main client plugin file. Declaration public List<string> Main { get; set; } Property Value Type Description List < String > The main client plugin file. | Improve this Doc View Source Overlays Gets or sets the client plugin overlay files. Declaration public List<string> Overlays { get; set; } Property Value Type Description List < String > The client plugin overlay files."
  },
  "core/NFive.SDK.Core.Extensions.Vector2Extensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.Vector2Extensions.html",
    "title": "Class Vector2Extensions | NFive API Reference",
    "keywords": "Class Vector2Extensions Inheritance Object Vector2Extensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax public static class Vector2Extensions Methods | Improve this Doc View Source InFrontOf(Vector2, Single, Single) Declaration public static Vector2 InFrontOf(this Vector2 position, float heading, float distance) Parameters Type Name Description Vector2 position Single heading Single distance Returns Type Description Vector2 | Improve this Doc View Source Lerp(Vector2, Vector2, Single) Declaration public static Vector2 Lerp(this Vector2 pos1, Vector2 pos2, float normalizedInterval) Parameters Type Name Description Vector2 pos1 Vector2 pos2 Single normalizedInterval Returns Type Description Vector2 | Improve this Doc View Source TranslateDir(Vector2, Single, Single) Declaration public static Vector2 TranslateDir(this Vector2 pos, float angleInDegrees, float distance) Parameters Type Name Description Vector2 pos Single angleInDegrees Single distance Returns Type Description Vector2"
  },
  "core/NFive.SDK.Core.Extensions.TypeExtensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | NFive API Reference",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source GetSpecifications<T>(Type, Func<PropertyInfo, T>) Declaration public static IEnumerable<T> GetSpecifications<T>(this Type type, Func<PropertyInfo, T> selector) Parameters Type Name Description Type type Func < PropertyInfo , T> selector Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "core/NFive.SDK.Core.Events.CoreEvents.html": {
    "href": "core/NFive.SDK.Core.Events.CoreEvents.html",
    "title": "Class CoreEvents | NFive API Reference",
    "keywords": "Class CoreEvents Core NFive events. Inheritance Object CoreEvents Namespace : NFive.SDK.Core.Events Assembly : NFive.SDK.Core.net.dll Syntax public static class CoreEvents Fields | Improve this Doc View Source ChatSendMessage The event that is fired when a new message is sent from a client. Declaration public const string ChatSendMessage = \"nfive:core:chat:sendmessage\" Field Value Type Description String | Improve this Doc View Source ClientInitialize The event that is fired as soon as a client initializes. Declaration public const string ClientInitialize = \"nfive:core:clientInitialize\" Field Value Type Description String | Improve this Doc View Source ClientInitialized The event that is fired as soon as a client has initialized. Declaration public const string ClientInitialized = \"nfive:core:clientInitialized\" Field Value Type Description String | Improve this Doc View Source ClientPlugins The event that is fired after client initialization to request plugin information. Declaration public const string ClientPlugins = \"nfive:core:clientPlugins\" Field Value Type Description String | Improve this Doc View Source LogMirror The event that is fired when the client is relaying a log message to the server. Declaration public const string LogMirror = \"nfive:log:mirror\" Field Value Type Description String"
  },
  "core/NFive.SDK.Core.Diagnostics.html": {
    "href": "core/NFive.SDK.Core.Diagnostics.html",
    "title": "Namespace NFive.SDK.Core.Diagnostics | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Diagnostics Interfaces ILogger Provides logging interface and utility functions. Enums LogLevel Defines available log levels."
  },
  "core/NFive.SDK.Core.Diagnostics.LogLevel.html": {
    "href": "core/NFive.SDK.Core.Diagnostics.LogLevel.html",
    "title": "Enum LogLevel | NFive API Reference",
    "keywords": "Enum LogLevel Defines available log levels. Namespace : NFive.SDK.Core.Diagnostics Assembly : NFive.SDK.Core.net.dll Syntax public enum LogLevel Fields Name Description Debug Debug log level. Error Error log level. Info Info log level. Trace Trace log level. Warn Warn log level."
  },
  "nfive/NFive.Server.Events.ExplosionEvent.html": {
    "href": "nfive/NFive.Server.Events.ExplosionEvent.html",
    "title": "Class ExplosionEvent | NFive API Reference",
    "keywords": "Class ExplosionEvent Inheritance Object ExplosionEvent Namespace : NFive.Server.Events Assembly : NFive.Server.net.dll Syntax public class ExplosionEvent : IExplosionEvent Constructors | Improve this Doc View Source ExplosionEvent(Object) Declaration public ExplosionEvent(dynamic event) Parameters Type Name Description Object event Properties | Improve this Doc View Source CameraShake Declaration public float CameraShake { get; } Property Value Type Description Single | Improve this Doc View Source DamageScale Declaration public float DamageScale { get; } Property Value Type Description Single | Improve this Doc View Source ExplosionType Declaration public int ExplosionType { get; } Property Value Type Description Int32 | Improve this Doc View Source IsAudible Declaration public bool IsAudible { get; } Property Value Type Description Boolean | Improve this Doc View Source IsInvisible Declaration public bool IsInvisible { get; } Property Value Type Description Boolean | Improve this Doc View Source OwnerNetId Declaration public int OwnerNetId { get; } Property Value Type Description Int32 | Improve this Doc View Source Position Declaration public Position Position { get; } Property Value Type Description Position Methods | Improve this Doc View Source Cancel() Declaration public void Cancel()"
  },
  "nfive/NFive.Server.Events.EventManager.html": {
    "href": "nfive/NFive.Server.Events.EventManager.html",
    "title": "Class EventManager | NFive API Reference",
    "keywords": "Class EventManager Inheritance Object EventManager Namespace : NFive.Server.Events Assembly : NFive.Server.net.dll Syntax public class EventManager : object Constructors | Improve this Doc View Source EventManager(LogLevel) Declaration public EventManager(LogLevel level) Parameters Type Name Description LogLevel level Methods | Improve this Doc View Source Emit(String, Object[]) Declaration public void Emit(string event, params object[] args) Parameters Type Name Description String event Object [] args | Improve this Doc View Source Off(String, Delegate) Declaration public void Off(string event, Delegate action) Parameters Type Name Description String event Delegate action"
  },
  "nfive/NFive.Server.Events.ConnectionDeferrals.html": {
    "href": "nfive/NFive.Server.Events.ConnectionDeferrals.html",
    "title": "Class ConnectionDeferrals | NFive API Reference",
    "keywords": "Class ConnectionDeferrals Inheritance Object ConnectionDeferrals Namespace : NFive.Server.Events Assembly : NFive.Server.net.dll Syntax public class ConnectionDeferrals : IConnectionDeferrals Constructors | Improve this Doc View Source ConnectionDeferrals(Object) Declaration public ConnectionDeferrals(dynamic deferrals) Parameters Type Name Description Object deferrals Properties | Improve this Doc View Source Message Declaration public string Message { set; } Property Value Type Description String Methods | Improve this Doc View Source Allow() Declaration public void Allow() | Improve this Doc View Source Defer() Declaration public void Defer() | Improve this Doc View Source Reject(String) Declaration public void Reject(string message) Parameters Type Name Description String message | Improve this Doc View Source ShowCard(String) Declaration public void ShowCard(string json) Parameters Type Name Description String json"
  },
  "nfive/NFive.Server.Diagnostics.html": {
    "href": "nfive/NFive.Server.Diagnostics.html",
    "title": "Namespace NFive.Server.Diagnostics | NFive API Reference",
    "keywords": "Namespace NFive.Server.Diagnostics Classes Logger"
  },
  "nfive/NFive.Client.Commands.html": {
    "href": "nfive/NFive.Client.Commands.html",
    "title": "Namespace NFive.Client.Commands | NFive API Reference",
    "keywords": "Namespace NFive.Client.Commands Classes CommandManager"
  },
  "nfive/NFive.Server.Controllers.DatabaseController.html": {
    "href": "nfive/NFive.Server.Controllers.DatabaseController.html",
    "title": "Class DatabaseController | NFive API Reference",
    "keywords": "Class DatabaseController Inheritance Object DatabaseController Namespace : NFive.Server.Controllers Assembly : NFive.Server.net.dll Syntax public class DatabaseController : ConfigurableController<DatabaseConfiguration> Constructors | Improve this Doc View Source DatabaseController(ILogger, DatabaseConfiguration, ICommunicationManager) Declaration public DatabaseController(ILogger logger, DatabaseConfiguration configuration, ICommunicationManager comms) Parameters Type Name Description ILogger logger DatabaseConfiguration configuration ICommunicationManager comms"
  },
  "nfive/NFive.Server.Configuration.html": {
    "href": "nfive/NFive.Server.Configuration.html",
    "title": "Namespace NFive.Server.Configuration | NFive API Reference",
    "keywords": "Namespace NFive.Server.Configuration Classes ClientConfiguration ClientConfiguration.LogConfiguration CoreConfiguration CoreConfiguration.DisplayConfiguration CoreConfiguration.LogConfiguration CoreConfiguration.LogOutputConfiguration DatabaseConfiguration DatabaseConfiguration.DatabaseBootHistoryConfiguration DatabaseConfiguration.DatabaseConnectionConfiguration DatabaseConfiguration.DatabaseMigrationsConfiguration ServerLogConfiguration SessionConfiguration"
  },
  "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseConnectionConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseConnectionConfiguration.html",
    "title": "Class DatabaseConfiguration.DatabaseConnectionConfiguration | NFive API Reference",
    "keywords": "Class DatabaseConfiguration.DatabaseConnectionConfiguration Inheritance Object DatabaseConfiguration.DatabaseConnectionConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class DatabaseConnectionConfiguration : object Properties | Improve this Doc View Source Charset Declaration public string Charset { get; set; } Property Value Type Description String | Improve this Doc View Source Database Declaration public string Database { get; set; } Property Value Type Description String | Improve this Doc View Source Host Declaration public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source Logging Declaration public bool Logging { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Password Declaration public string Password { get; set; } Property Value Type Description String | Improve this Doc View Source Port Declaration public int Port { get; set; } Property Value Type Description Int32 | Improve this Doc View Source User Declaration public string User { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "plugin/NFive.SDK.Plugins.Configuration.BasePluginTypeInspector.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.BasePluginTypeInspector.html",
    "title": "Class BasePluginTypeInspector | NFive API Reference",
    "keywords": "Class BasePluginTypeInspector Yaml inspector to deserialize a plugin configuration. Inheritance Object BasePluginTypeInspector Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class BasePluginTypeInspector : TypeInspectorSkeleton Constructors | Improve this Doc View Source BasePluginTypeInspector(ITypeInspector) Initializes a new instance of the BasePluginTypeInspector class. Declaration public BasePluginTypeInspector(ITypeInspector inspector) Parameters Type Name Description ITypeInspector inspector The type inspector. Methods | Improve this Doc View Source GetProperties(Type, Object) Gets the filtered properties from the specified type container. Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type The type to inspect. Object container The container to extract properties from. Returns Type Description IEnumerable < IPropertyDescriptor > Valid deserialized properties."
  },
  "server/NFive.SDK.Server.html": {
    "href": "server/NFive.SDK.Server.html",
    "title": "Namespace NFive.SDK.Server | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server Classes SDK Server SDK constants. ServerPluginAttribute Specifies the server SDK version number the assembly was built against."
  },
  "server/NFive.SDK.Server.Storage.html": {
    "href": "server/NFive.SDK.Server.Storage.html",
    "title": "Namespace NFive.SDK.Server.Storage | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Storage Classes EFContext<TContext> Represents a MySQL Entity Framework database context."
  },
  "server/NFive.SDK.Server.Locales.LocaleCatalog.html": {
    "href": "server/NFive.SDK.Server.Locales.LocaleCatalog.html",
    "title": "Class LocaleCatalog | NFive API Reference",
    "keywords": "Class LocaleCatalog Inheritance Object LocaleCatalog Namespace : NFive.SDK.Server.Locales Assembly : NFive.SDK.Server.net.dll Syntax public class LocaleCatalog : ILocaleCatalog Constructors | Improve this Doc View Source LocaleCatalog(Catalog) Declaration public LocaleCatalog(Catalog catalog) Parameters Type Name Description Catalog catalog Properties | Improve this Doc View Source Culture Declaration public CultureInfo Culture { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64) Declaration public string GetParticularPluralString(string context, string text, string pluralText, long n) Parameters Type Name Description String context String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetParticularPluralString(String, String, String, Int64, Object[]) Declaration public string GetParticularPluralString(string context, string text, string pluralText, long n, params object[] args) Parameters Type Name Description String context String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetParticularString(String, String) Declaration public string GetParticularString(string context, string text) Parameters Type Name Description String context String text Returns Type Description String | Improve this Doc View Source GetParticularString(String, String, Object[]) Declaration public string GetParticularString(string context, string text, params object[] args) Parameters Type Name Description String context String text Object [] args Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64) Declaration public string GetPluralString(string text, string pluralText, long n) Parameters Type Name Description String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source GetPluralString(String, String, Int64, Object[]) Declaration public string GetPluralString(string text, string pluralText, long n, params object[] args) Parameters Type Name Description String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source GetString(String) Declaration public string GetString(string text) Parameters Type Name Description String text Returns Type Description String | Improve this Doc View Source GetString(String, Object[]) Declaration public string GetString(string text, params object[] args) Parameters Type Name Description String text Object [] args Returns Type Description String"
  },
  "server/NFive.SDK.Server.IoC.html": {
    "href": "server/NFive.SDK.Server.IoC.html",
    "title": "Namespace NFive.SDK.Server.IoC | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.IoC Classes ComponentAttribute Enums Lifetime Lifetime of an object"
  },
  "server/NFive.SDK.Server.IoC.Lifetime.html": {
    "href": "server/NFive.SDK.Server.IoC.Lifetime.html",
    "title": "Enum Lifetime | NFive API Reference",
    "keywords": "Enum Lifetime Lifetime of an object Namespace : NFive.SDK.Server.IoC Assembly : NFive.SDK.Server.net.dll Syntax public enum Lifetime Fields Name Description Singleton Same instance for the entire application lifetime. Transient Return a new object each time the service is request."
  },
  "server/NFive.SDK.Server.IoC.ComponentAttribute.html": {
    "href": "server/NFive.SDK.Server.IoC.ComponentAttribute.html",
    "title": "Class ComponentAttribute | NFive API Reference",
    "keywords": "Class ComponentAttribute Inheritance Object Attribute ComponentAttribute Namespace : NFive.SDK.Server.IoC Assembly : NFive.SDK.Server.net.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Interface)] public class ComponentAttribute : Attribute, _Attribute Properties | Improve this Doc View Source Lifetime Gets or sets lifetime Declaration public Lifetime Lifetime { get; set; } Property Value Type Description Lifetime"
  },
  "server/NFive.SDK.Server.Extensions.html": {
    "href": "server/NFive.SDK.Server.Extensions.html",
    "title": "Namespace NFive.SDK.Server.Extensions | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Extensions Classes PositionExtensions VectorExtensions"
  },
  "server/NFive.SDK.Server.Extensions.VectorExtensions.html": {
    "href": "server/NFive.SDK.Server.Extensions.VectorExtensions.html",
    "title": "Class VectorExtensions | NFive API Reference",
    "keywords": "Class VectorExtensions Inheritance Object VectorExtensions Namespace : NFive.SDK.Server.Extensions Assembly : NFive.SDK.Server.net.dll Syntax public static class VectorExtensions Methods | Improve this Doc View Source ToCitVector3(Vector3) Converts to CitizenFX Vector3. Declaration public static CitizenFX.Core.Vector3 ToCitVector3(this Vector3 vector3) Parameters Type Name Description Vector3 vector3 The to convert. Returns Type Description CitizenFX.Core.Vector3 The CitizenFX Vector3. | Improve this Doc View Source ToVector3(CitizenFX.Core.Vector3) Coverts to . Declaration public static Vector3 ToVector3(this CitizenFX.Core.Vector3 vector3) Parameters Type Name Description CitizenFX.Core.Vector3 vector3 The CitizenFX Vector3 to convert. Returns Type Description Vector3 The ."
  },
  "server/NFive.SDK.Server.Extensions.PositionExtensions.html": {
    "href": "server/NFive.SDK.Server.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions | NFive API Reference",
    "keywords": "Class PositionExtensions Inheritance Object PositionExtensions Namespace : NFive.SDK.Server.Extensions Assembly : NFive.SDK.Server.net.dll Syntax public static class PositionExtensions Methods | Improve this Doc View Source ToCitVector3(Position) Declaration public static CitizenFX.Core.Vector3 ToCitVector3(this Position position) Parameters Type Name Description Position position Returns Type Description CitizenFX.Core.Vector3"
  },
  "server/NFive.SDK.Server.Events.html": {
    "href": "server/NFive.SDK.Server.Events.html",
    "title": "Namespace NFive.SDK.Server.Events | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Events Classes BootEvents NFive server boot events which are sent over the server event manager. ClientDeferralsEventArgs ClientEventArgs ClientReconnectEventArgs ClientSessionDeferralsEventArgs ClientSessionEventArgs ClientUserEventArgs FiveMServerEvents ServerEvents Core NFive server events which are sent over the server event manager. SessionEvents Interfaces IConnectionDeferrals IExplosionEvent"
  },
  "server/NFive.SDK.Server.Events.ClientReconnectEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientReconnectEventArgs.html",
    "title": "Class ClientReconnectEventArgs | NFive API Reference",
    "keywords": "Class ClientReconnectEventArgs Inheritance Object EventArgs ClientEventArgs ClientReconnectEventArgs Inherited Members ClientEventArgs.Client EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientReconnectEventArgs : ClientEventArgs Constructors | Improve this Doc View Source ClientReconnectEventArgs(IClient, Session, Session) Initializes a new instance of the ClientReconnectEventArgs class. Declaration public ClientReconnectEventArgs(IClient client, Session oldSession, Session newSession) Parameters Type Name Description IClient client The client. Session oldSession The old session. Session newSession The new session. Properties | Improve this Doc View Source NewSession Gets the new session. Declaration public Session NewSession { get; } Property Value Type Description Session The new session. | Improve this Doc View Source OldSession Gets the old session. Declaration public Session OldSession { get; } Property Value Type Description Session The old session."
  },
  "server/NFive.SDK.Server.Events.ClientEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientEventArgs.html",
    "title": "Class ClientEventArgs | NFive API Reference",
    "keywords": "Class ClientEventArgs Inheritance Object EventArgs ClientEventArgs ClientDeferralsEventArgs ClientReconnectEventArgs ClientSessionEventArgs ClientUserEventArgs Inherited Members EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientEventArgs : EventArgs Constructors | Improve this Doc View Source ClientEventArgs(IClient) Initializes a new instance of the ClientEventArgs class. Declaration public ClientEventArgs(IClient client) Parameters Type Name Description IClient client The client. Properties | Improve this Doc View Source Client Gets the client. Declaration public IClient Client { get; } Property Value Type Description IClient The client."
  },
  "server/NFive.SDK.Server.Events.ClientDeferralsEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientDeferralsEventArgs.html",
    "title": "Class ClientDeferralsEventArgs | NFive API Reference",
    "keywords": "Class ClientDeferralsEventArgs Inheritance Object EventArgs ClientEventArgs ClientDeferralsEventArgs Inherited Members ClientEventArgs.Client EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientDeferralsEventArgs : ClientEventArgs Constructors | Improve this Doc View Source ClientDeferralsEventArgs(IClient, IConnectionDeferrals) Initializes a new instance of the ClientDeferralsEventArgs class. Declaration public ClientDeferralsEventArgs(IClient client, IConnectionDeferrals deferrals) Parameters Type Name Description IClient client The client. IConnectionDeferrals deferrals The deferrals. Properties | Improve this Doc View Source Deferrals Gets the deferrals. Declaration public IConnectionDeferrals Deferrals { get; } Property Value Type Description IConnectionDeferrals The deferrals."
  },
  "server/NFive.SDK.Server.Events.BootEvents.html": {
    "href": "server/NFive.SDK.Server.Events.BootEvents.html",
    "title": "Class BootEvents | NFive API Reference",
    "keywords": "Class BootEvents NFive server boot events which are sent over the server event manager. Inheritance Object BootEvents Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public static class BootEvents Fields | Improve this Doc View Source GetLastActiveTime Event which is used to request the timestamp of when the server shutdown last boot. Declaration public const string GetLastActiveTime = \"nfive:server:boot:getLastActiveTime\" Field Value Type Description String | Improve this Doc View Source GetLastTime Event which is used to request the timestamp of when the server started last boot. Declaration public const string GetLastTime = \"nfive:server:boot:getLastTime\" Field Value Type Description String | Improve this Doc View Source GetTime Event which is used to request the timestamp of when the server started this boot. Declaration public const string GetTime = \"nfive:server:boot:getTime\" Field Value Type Description String"
  },
  "server/NFive.SDK.Server.Controllers.html": {
    "href": "server/NFive.SDK.Server.Controllers.html",
    "title": "Namespace NFive.SDK.Server.Controllers | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Controllers Classes ConfigurableController<T> Base class for a server script with automatically loaded configuration file. Controller Base class for a server script."
  },
  "server/NFive.SDK.Server.Controllers.Controller.html": {
    "href": "server/NFive.SDK.Server.Controllers.Controller.html",
    "title": "Class Controller | NFive API Reference",
    "keywords": "Class Controller Base class for a server script. Inheritance Object Controller ConfigurableController<T> Namespace : NFive.SDK.Server.Controllers Assembly : NFive.SDK.Server.net.dll Syntax public abstract class Controller Constructors | Improve this Doc View Source Controller(ILogger) Initializes a new instance of the Controller class. Declaration protected Controller(ILogger logger) Parameters Type Name Description ILogger logger The message logger. Fields | Improve this Doc View Source Catalog Declaration protected static ILocaleCatalog Catalog Field Value Type Description ILocaleCatalog | Improve this Doc View Source Logger The message logger, Declaration protected readonly ILogger Logger Field Value Type Description ILogger Methods | Improve this Doc View Source _(String) Declaration public static string _(string text) Parameters Type Name Description String text Returns Type Description String | Improve this Doc View Source _(String, Object[]) Declaration public static string _(string text, params object[] args) Parameters Type Name Description String text Object [] args Returns Type Description String | Improve this Doc View Source _n(String, String, Int64) Declaration public static string _n(string text, string pluralText, long n) Parameters Type Name Description String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source _n(String, String, Int64, Object[]) Declaration public static string _n(string text, string pluralText, long n, params object[] args) Parameters Type Name Description String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source _p(String, String) Declaration public static string _p(string context, string text) Parameters Type Name Description String context String text Returns Type Description String | Improve this Doc View Source _p(String, String, Object[]) Declaration public static string _p(string context, string text, params object[] args) Parameters Type Name Description String context String text Object [] args Returns Type Description String | Improve this Doc View Source _pn(String, String, String, Int64) Declaration public static string _pn(string context, string text, string pluralText, long n) Parameters Type Name Description String context String text String pluralText Int64 n Returns Type Description String | Improve this Doc View Source _pn(String, String, String, Int64, Object[]) Declaration public static string _pn(string context, string text, string pluralText, long n, params object[] args) Parameters Type Name Description String context String text String pluralText Int64 n Object [] args Returns Type Description String | Improve this Doc View Source Delay(Int32) Declaration protected Task Delay(int ms) Parameters Type Name Description Int32 ms Returns Type Description Task | Improve this Doc View Source Delay(TimeSpan) Declaration protected Task Delay(TimeSpan delay) Parameters Type Name Description TimeSpan delay Returns Type Description Task | Improve this Doc View Source Loaded() Declaration public virtual Task Loaded() Returns Type Description Task | Improve this Doc View Source Reload() Reloads this controllers configuration. Declaration public virtual void Reload() | Improve this Doc View Source Started() Declaration public virtual Task Started() Returns Type Description Task"
  },
  "server/NFive.SDK.Server.Controllers.ConfigurableController-1.html": {
    "href": "server/NFive.SDK.Server.Controllers.ConfigurableController-1.html",
    "title": "Class ConfigurableController<T> | NFive API Reference",
    "keywords": "Class ConfigurableController<T> Base class for a server script with automatically loaded configuration file. Inheritance Object Controller ConfigurableController<T> Inherited Members Controller.Catalog Controller.Logger Controller._(String) Controller._(String, Object[]) Controller._n(String, String, Int64) Controller._n(String, String, Int64, Object[]) Controller._p(String, String) Controller._p(String, String, Object[]) Controller._pn(String, String, String, Int64) Controller._pn(String, String, String, Int64, Object[]) Controller.Loaded() Controller.Started() Controller.Reload() Controller.Delay(Int32) Controller.Delay(TimeSpan) Namespace : NFive.SDK.Server.Controllers Assembly : NFive.SDK.Server.net.dll Syntax public abstract class ConfigurableController<T> : Controller where T : IControllerConfiguration Type Parameters Name Description T The type of the configuration to load. Constructors | Improve this Doc View Source ConfigurableController(ILogger, T) Initializes a new instance of the ConfigurableController<T> class. Declaration protected ConfigurableController(ILogger logger, T configuration) Parameters Type Name Description ILogger logger The message logger. T configuration The configuration loaded from file. Properties | Improve this Doc View Source Configuration Gets the configuration loaded from file. Declaration protected T Configuration { get; } Property Value Type Description T The configuration loaded from file. Methods | Improve this Doc View Source Reload(T) Reloads this controllers configuration. Declaration public virtual void Reload(T configuration) Parameters Type Name Description T configuration The updated controller configuration. See Also Controller"
  },
  "server/NFive.SDK.Server.Configuration.html": {
    "href": "server/NFive.SDK.Server.Configuration.html",
    "title": "Namespace NFive.SDK.Server.Configuration | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Configuration Classes ServerConfiguration Represents the core configuration of a server."
  },
  "server/NFive.SDK.Server.Communications.ICommunicationReceive.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationReceive.html",
    "title": "Interface ICommunicationReceive | NFive API Reference",
    "keywords": "Interface ICommunicationReceive Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationReceive Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Registers the specified callback. Declaration void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback The callback. | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Registers the specified callback. Declaration void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback The callback. Type Parameters Name Description T The type of the first callback parameter. | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Registers the specified callback. Declaration void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Registers the specified callback. Declaration void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Registers the specified callback. Declaration void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Registers the specified callback. Declaration void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. T5 The type of the fifth callback parameter. | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Registers the specified callback. Declaration void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback The callback. | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Registers the specified callback. Declaration void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback The callback. Type Parameters Name Description T The type of the first callback parameter. | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Registers the specified callback. Declaration void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. T5 The type of the fifth callback parameter."
  },
  "server/NFive.SDK.Server.Communications.ICommunicationMessage.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationMessage.html",
    "title": "Interface ICommunicationMessage | NFive API Reference",
    "keywords": "Interface ICommunicationMessage Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationMessage Properties | Improve this Doc View Source Client Gets the client that sent the event. Declaration IClient Client { get; } Property Value Type Description IClient The client that sent the event. | Improve this Doc View Source Session Gets the user belonging to the Client . Declaration Session Session { get; } Property Value Type Description Session The Session. | Improve this Doc View Source User Gets the user belonging to the Client . Declaration User User { get; } Property Value Type Description User The user. Methods | Improve this Doc View Source Reply(Object[]) Replies to the event with the specified payloads. Declaration void Reply(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads to reply to the event with."
  },
  "server/NFive.SDK.Server.Communications.ICommunicationManager.html": {
    "href": "server/NFive.SDK.Server.Communications.ICommunicationManager.html",
    "title": "Interface ICommunicationManager | NFive API Reference",
    "keywords": "Interface ICommunicationManager Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface ICommunicationManager Methods | Improve this Doc View Source Event(String) Declaration ICommunicationTarget Event(string event) Parameters Type Name Description String event Returns Type Description ICommunicationTarget"
  },
  "server/NFive.SDK.Server.Communications.IClientList.html": {
    "href": "server/NFive.SDK.Server.Communications.IClientList.html",
    "title": "Interface IClientList | NFive API Reference",
    "keywords": "Interface IClientList Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface IClientList Properties | Improve this Doc View Source Clients Gets the clients. Declaration List<IClient> Clients { get; } Property Value Type Description List < IClient > The clients. Events | Improve this Doc View Source ClientAdded Occurs when [client added]. Declaration event EventHandler<ClientEventArgs> ClientAdded Event Type Type Description EventHandler < ClientEventArgs > | Improve this Doc View Source ClientRemoved Occurs when [client removed]. Declaration event EventHandler<ClientEventArgs> ClientRemoved Event Type Type Description EventHandler < ClientEventArgs >"
  },
  "server/NFive.SDK.Server.Communications.IClient.html": {
    "href": "server/NFive.SDK.Server.Communications.IClient.html",
    "title": "Interface IClient | NFive API Reference",
    "keywords": "Interface IClient Represents a client connected to the server Namespace : NFive.SDK.Server.Communications Assembly : NFive.SDK.Server.net.dll Syntax public interface IClient Properties | Improve this Doc View Source DiscordId Gets the client Discord identifier. Declaration ulong? DiscordId { get; } Property Value Type Description Nullable < UInt64 > The client Discord identifier. | Improve this Doc View Source EndPoint Gets the client end point. Declaration string EndPoint { get; } Property Value Type Description String The end point. | Improve this Doc View Source Handle Gets the server client handle. Declaration int Handle { get; } Property Value Type Description Int32 The server client handle. | Improve this Doc View Source License Gets the client license. Declaration string License { get; } Property Value Type Description String The client license. | Improve this Doc View Source Name Gets the client name. Declaration string Name { get; } Property Value Type Description String The client name. | Improve this Doc View Source Ping Gets the client ping. Declaration int Ping { get; } Property Value Type Description Int32 The client ping. | Improve this Doc View Source SteamId Gets the client Steam identifier. Declaration long? SteamId { get; } Property Value Type Description Nullable < Int64 > The client Steam identifier."
  },
  "client/NFive.SDK.Client.html": {
    "href": "client/NFive.SDK.Client.html",
    "title": "Namespace NFive.SDK.Client | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client Classes ClientPluginAttribute Specifies the client SDK version number the assembly was built against. SDK Client SDK constants."
  },
  "client/NFive.SDK.Client.Services.html": {
    "href": "client/NFive.SDK.Client.Services.html",
    "title": "Namespace NFive.SDK.Client.Services | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Services Classes Service"
  },
  "client/NFive.SDK.Client.Interface.NuiManager.html": {
    "href": "client/NFive.SDK.Client.Interface.NuiManager.html",
    "title": "Class NuiManager | NFive API Reference",
    "keywords": "Class NuiManager Inheritance Object NuiManager Implements INuiManager Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public class NuiManager : INuiManager Constructors | Improve this Doc View Source NuiManager(EventHandlerDictionary) Declaration public NuiManager(EventHandlerDictionary events) Parameters Type Name Description EventHandlerDictionary events Methods | Improve this Doc View Source Emit(Object) Declaration public void Emit(object data) Parameters Type Name Description Object data | Improve this Doc View Source On(String, Action) Declaration public void On(string event, Action action) Parameters Type Name Description String event Action action | Improve this Doc View Source On<T>(String, Action<T>) Declaration public void On<T>(string event, Action<T> action) Parameters Type Name Description String event Action <T> action Type Parameters Name Description T | Improve this Doc View Source On<TReturn>(String, Func<TReturn>) Declaration public void On<TReturn>(string event, Func<TReturn> action) Parameters Type Name Description String event Func <TReturn> action Type Parameters Name Description TReturn | Improve this Doc View Source On<T, TReturn>(String, Func<T, TReturn>) Declaration public void On<T, TReturn>(string event, Func<T, TReturn> action) Parameters Type Name Description String event Func <T, TReturn> action Type Parameters Name Description T TReturn Implements INuiManager"
  },
  "client/NFive.SDK.Client.Interface.IOverlay.html": {
    "href": "client/NFive.SDK.Client.Interface.IOverlay.html",
    "title": "Interface IOverlay | NFive API Reference",
    "keywords": "Interface IOverlay Inherited Members IDisposable.Dispose() Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public interface IOverlay : IDisposable Properties | Improve this Doc View Source Manager Declaration OverlayManager Manager { get; } Property Value Type Description OverlayManager | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source Visible Declaration bool Visible { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Emit(String, Object) Declaration void Emit(string event, object data = null) Parameters Type Name Description String event Object data | Improve this Doc View Source Hide() Declaration void Hide() | Improve this Doc View Source On(String, Action) Declaration void On(string event, Action action) Parameters Type Name Description String event Action action | Improve this Doc View Source On<T>(String, Action<T>) Declaration void On<T>(string event, Action<T> action) Parameters Type Name Description String event Action <T> action Type Parameters Name Description T | Improve this Doc View Source On<TReturn>(String, Func<TReturn>) Declaration void On<TReturn>(string event, Func<TReturn> action) Parameters Type Name Description String event Func <TReturn> action Type Parameters Name Description TReturn | Improve this Doc View Source On<T, TReturn>(String, Func<T, TReturn>) Declaration void On<T, TReturn>(string event, Func<T, TReturn> action) Parameters Type Name Description String event Func <T, TReturn> action Type Parameters Name Description T TReturn | Improve this Doc View Source Ready() Declaration dynamic Ready() Returns Type Description Object | Improve this Doc View Source Show() Declaration void Show()"
  },
  "client/NFive.SDK.Client.Interface.INuiManager.html": {
    "href": "client/NFive.SDK.Client.Interface.INuiManager.html",
    "title": "Interface INuiManager | NFive API Reference",
    "keywords": "Interface INuiManager Namespace : NFive.SDK.Client.Interface Assembly : NFive.SDK.Client.net.dll Syntax public interface INuiManager Methods | Improve this Doc View Source Emit(Object) Declaration void Emit(object data) Parameters Type Name Description Object data | Improve this Doc View Source On(String, Action) Declaration void On(string event, Action action) Parameters Type Name Description String event Action action | Improve this Doc View Source On<T>(String, Action<T>) Declaration void On<T>(string event, Action<T> action) Parameters Type Name Description String event Action <T> action Type Parameters Name Description T | Improve this Doc View Source On<TReturn>(String, Func<TReturn>) Declaration void On<TReturn>(string event, Func<TReturn> action) Parameters Type Name Description String event Func <TReturn> action Type Parameters Name Description TReturn | Improve this Doc View Source On<T, TReturn>(String, Func<T, TReturn>) Declaration void On<T, TReturn>(string event, Func<T, TReturn> action) Parameters Type Name Description String event Func <T, TReturn> action Type Parameters Name Description T TReturn"
  },
  "client/NFive.SDK.Client.Input.html": {
    "href": "client/NFive.SDK.Client.Input.html",
    "title": "Namespace NFive.SDK.Client.Input | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Client.Input Classes Hotkey Input Enums InputModifier KeyCode"
  },
  "nfive/NFive.Server.Configuration.ClientConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.ClientConfiguration.html",
    "title": "Class ClientConfiguration | NFive API Reference",
    "keywords": "Class ClientConfiguration Inheritance Object ClientConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class ClientConfiguration : object Properties | Improve this Doc View Source Log Declaration public ClientConfiguration.LogConfiguration Log { get; set; } Property Value Type Description ClientConfiguration.LogConfiguration | Improve this Doc View Source Plugins Declaration public List<Plugin> Plugins { get; set; } Property Value Type Description List < Plugin > | Improve this Doc View Source User Declaration public User User { get; set; } Property Value Type Description User"
  },
  "nfive/NFive.Server.Configuration.ClientConfiguration.LogConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.ClientConfiguration.LogConfiguration.html",
    "title": "Class ClientConfiguration.LogConfiguration | NFive API Reference",
    "keywords": "Class ClientConfiguration.LogConfiguration Inheritance Object ClientConfiguration.LogConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class LogConfiguration : object Properties | Improve this Doc View Source Core Declaration public LogLevel Core { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source Events Declaration public LogLevel Events { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source Mirror Declaration public bool Mirror { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Plugins Declaration public Dictionary<string, LogLevel> Plugins { get; set; } Property Value Type Description Dictionary < String , LogLevel > | Improve this Doc View Source Rpc Declaration public LogLevel Rpc { get; set; } Property Value Type Description LogLevel"
  },
  "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseBootHistoryConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.DatabaseConfiguration.DatabaseBootHistoryConfiguration.html",
    "title": "Class DatabaseConfiguration.DatabaseBootHistoryConfiguration | NFive API Reference",
    "keywords": "Class DatabaseConfiguration.DatabaseBootHistoryConfiguration Inheritance Object DatabaseConfiguration.DatabaseBootHistoryConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class DatabaseBootHistoryConfiguration : object Properties | Improve this Doc View Source UpdateFrequency Declaration public TimeSpan UpdateFrequency { get; set; } Property Value Type Description TimeSpan"
  },
  "nfive/NFive.Server.Communications.CommunicationMessage.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationMessage.html",
    "title": "Class CommunicationMessage | NFive API Reference",
    "keywords": "Class CommunicationMessage Inheritance Object CommunicationMessage Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationMessage : ICommunicationMessage Constructors | Improve this Doc View Source CommunicationMessage(String) Declaration public CommunicationMessage(string event) Parameters Type Name Description String event | Improve this Doc View Source CommunicationMessage(String, Guid, IClient) Declaration public CommunicationMessage(string event, Guid id, IClient client) Parameters Type Name Description String event Guid id IClient client | Improve this Doc View Source CommunicationMessage(String, IClient) Declaration public CommunicationMessage(string event, IClient client) Parameters Type Name Description String event IClient client | Improve this Doc View Source CommunicationMessage(String, EventManager) Declaration public CommunicationMessage(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager Properties | Improve this Doc View Source Client Declaration public IClient Client { get; } Property Value Type Description IClient | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; } Property Value Type Description Guid | Improve this Doc View Source Session Declaration public Session Session { get; } Property Value Type Description Session | Improve this Doc View Source User Declaration public User User { get; } Property Value Type Description User Methods | Improve this Doc View Source Reply(Object[]) Declaration public void Reply(params object[] payloads) Parameters Type Name Description Object [] payloads"
  },
  "nfive/NFive.Server.Communications.CommunicationManager.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationManager.html",
    "title": "Class CommunicationManager | NFive API Reference",
    "keywords": "Class CommunicationManager Inheritance Object CommunicationManager Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationManager : ICommunicationManager Constructors | Improve this Doc View Source CommunicationManager(EventManager) Declaration public CommunicationManager(EventManager eventManager) Parameters Type Name Description EventManager eventManager Methods | Improve this Doc View Source Event(String) Declaration public ICommunicationTarget Event(string event) Parameters Type Name Description String event Returns Type Description ICommunicationTarget"
  },
  "nfive/NFive.Client.Rpc.InboundMessage.html": {
    "href": "nfive/NFive.Client.Rpc.InboundMessage.html",
    "title": "Class InboundMessage | NFive API Reference",
    "keywords": "Class InboundMessage Inheritance Object InboundMessage Namespace : NFive.Client.Rpc Assembly : NFive.Client.net.dll Syntax public class InboundMessage Properties | Improve this Doc View Source Event Declaration public string Event { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source Payloads Declaration public List<string> Payloads { get; set; } Property Value Type Description List < String > Methods | Improve this Doc View Source From(Byte[]) Declaration public static InboundMessage From(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description InboundMessage"
  },
  "plugin/NFive.SDK.Plugins.Configuration.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.html",
    "title": "Namespace NFive.SDK.Plugins.Configuration | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Plugins.Configuration Classes BasePluginTypeInspector Yaml inspector to deserialize a plugin configuration. ConfigurationManager Utility helpers for generating and serializing plugin configuration files. CultureInfoConverter Yaml converter for CultureInfo . IPAddressConverter Yaml converter for IPAddress . NameConverter Yaml converter for type. PluginTypeInspector Yaml inspector to deserialize a plugin configuration. SteamIdConverter Yaml converter for type. TimeSpanConverter Yaml converter for TimeSpan type. TimeZoneInfoConverter Yaml converter for TimeZoneInfo . VersionConverter Yaml converter for type. VersionRangeConverter Yaml converter for . Yaml Yaml serialization helpers."
  },
  "plugin/NFive.SDK.Plugins.Configuration.Yaml.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.Yaml.html",
    "title": "Class Yaml | NFive API Reference",
    "keywords": "Class Yaml Yaml serialization helpers. Inheritance Object Yaml Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public static class Yaml Methods | Improve this Doc View Source Deserialize(String, Type) Deserializes the specified Yaml. Declaration public static object Deserialize(string yml, Type type) Parameters Type Name Description String yml The Yaml string. Type type The type to deserialize as. Returns Type Description Object The deserialized object. | Improve this Doc View Source Deserialize<T>(String) Deserializes the specified Yaml. Declaration public static T Deserialize<T>(string yml) Parameters Type Name Description String yml The Yaml string. Returns Type Description T The deserialized object. Type Parameters Name Description T The type to deserialize as. | Improve this Doc View Source Serialize(Object) Serializes the specified object. Declaration public static string Serialize(object obj) Parameters Type Name Description Object obj The object to serialize. Returns Type Description String The Yaml string."
  },
  "plugin/NFive.SDK.Plugins.Configuration.VersionRangeConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.VersionRangeConverter.html",
    "title": "Class VersionRangeConverter | NFive API Reference",
    "keywords": "Class VersionRangeConverter Yaml converter for . Inheritance Object VersionRangeConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class VersionRangeConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a YAML parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a YAML emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.VersionConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.VersionConverter.html",
    "title": "Class VersionConverter | NFive API Reference",
    "keywords": "Class VersionConverter Yaml converter for type. Inheritance Object VersionConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class VersionConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type The type to check. Returns Type Description Boolean true if the specified Type can be converted; otherwise, false . | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a Yaml parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object Deserialized object. | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a Yaml emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.TimeZoneInfoConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.TimeZoneInfoConverter.html",
    "title": "Class TimeZoneInfoConverter | NFive API Reference",
    "keywords": "Class TimeZoneInfoConverter Yaml converter for TimeZoneInfo . Inheritance Object TimeZoneInfoConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class TimeZoneInfoConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a YAML parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a YAML emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.TimeSpanConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.TimeSpanConverter.html",
    "title": "Class TimeSpanConverter | NFive API Reference",
    "keywords": "Class TimeSpanConverter Yaml converter for TimeSpan type. Inheritance Object TimeSpanConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class TimeSpanConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type The type to check. Returns Type Description Boolean true if the specified Type can be converted; otherwise, false . | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a Yaml parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object Deserialized TimeSpan object. | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a Yaml emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.SteamIdConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.SteamIdConverter.html",
    "title": "Class SteamIdConverter | NFive API Reference",
    "keywords": "Class SteamIdConverter Yaml converter for type. Inheritance Object SteamIdConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class SteamIdConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a Yaml parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a Yaml emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.PluginTypeInspector.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.PluginTypeInspector.html",
    "title": "Class PluginTypeInspector | NFive API Reference",
    "keywords": "Class PluginTypeInspector Yaml inspector to deserialize a plugin configuration. Inheritance Object PluginTypeInspector Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class PluginTypeInspector : TypeInspectorSkeleton Constructors | Improve this Doc View Source PluginTypeInspector(ITypeInspector) Initializes a new instance of the PluginTypeInspector class. Declaration public PluginTypeInspector(ITypeInspector inspector) Parameters Type Name Description ITypeInspector inspector The type inspector. Methods | Improve this Doc View Source GetProperties(Type, Object) Gets the filtered properties from the specified type container. Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description Type type The type to inspect. Object container The container to extract properties from. Returns Type Description IEnumerable < IPropertyDescriptor > Valid deserialized properties."
  },
  "server/NFive.SDK.Server.Storage.EFContext-1.html": {
    "href": "server/NFive.SDK.Server.Storage.EFContext-1.html",
    "title": "Class EFContext<TContext> | NFive API Reference",
    "keywords": "Class EFContext<TContext> Represents a MySQL Entity Framework database context. Inheritance Object EFContext<TContext> Namespace : NFive.SDK.Server.Storage Assembly : NFive.SDK.Server.net.dll Syntax public abstract class EFContext<TContext> : DbContext where TContext : DbContext Type Parameters Name Description TContext The type of the database context. Constructors | Improve this Doc View Source EFContext() Initializes a new instance of the EFContext<TContext> class. Declaration protected EFContext() | Improve this Doc View Source EFContext(String) Initializes a new instance of the EFContext<TContext> class. Declaration protected EFContext(string connectionString) Parameters Type Name Description String connectionString The MySQL database connection string. Methods | Improve this Doc View Source OnModelCreating(DbModelBuilder) This method is called when the model for a derived context has been initialized, but before the model has been locked down and used to initialize the context. Declaration protected override void OnModelCreating(DbModelBuilder modelBuilder) Parameters Type Name Description DbModelBuilder modelBuilder The builder that defines the model for the context being created."
  },
  "server/NFive.SDK.Server.ServerPluginAttribute.html": {
    "href": "server/NFive.SDK.Server.ServerPluginAttribute.html",
    "title": "Class ServerPluginAttribute | NFive API Reference",
    "keywords": "Class ServerPluginAttribute Specifies the server SDK version number the assembly was built against. Inheritance Object ServerPluginAttribute Namespace : NFive.SDK.Server Assembly : NFive.SDK.Server.net.dll Syntax public class ServerPluginAttribute : PluginAttribute Constructors | Improve this Doc View Source ServerPluginAttribute(UInt32) Initializes a new instance of the ServerPluginAttribute class. Declaration public ServerPluginAttribute(uint target) Parameters Type Name Description UInt32 target The target server SDK version number."
  },
  "server/NFive.SDK.Server.SDK.html": {
    "href": "server/NFive.SDK.Server.SDK.html",
    "title": "Class SDK | NFive API Reference",
    "keywords": "Class SDK Server SDK constants. Inheritance Object SDK Namespace : NFive.SDK.Server Assembly : NFive.SDK.Server.net.dll Syntax public static class SDK Fields | Improve this Doc View Source Version The current server SDK version number. Declaration public const int Version = 1 Field Value Type Description Int32"
  },
  "server/NFive.SDK.Server.Rcon.html": {
    "href": "server/NFive.SDK.Server.Rcon.html",
    "title": "Namespace NFive.SDK.Server.Rcon | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Rcon Interfaces IRconManager"
  },
  "server/NFive.SDK.Server.Rcon.IRconManager.html": {
    "href": "server/NFive.SDK.Server.Rcon.IRconManager.html",
    "title": "Interface IRconManager | NFive API Reference",
    "keywords": "Interface IRconManager Namespace : NFive.SDK.Server.Rcon Assembly : NFive.SDK.Server.net.dll Syntax public interface IRconManager Methods | Improve this Doc View Source Register(String, Action) Declaration void Register(string command, Action callback) Parameters Type Name Description String command Action callback | Improve this Doc View Source Register<T>(String, Action<T>) Declaration void Register<T>(string command, Action<T> callback) Parameters Type Name Description String command Action <T> callback Type Parameters Name Description T"
  },
  "server/NFive.SDK.Server.Migrations.html": {
    "href": "server/NFive.SDK.Server.Migrations.html",
    "title": "Namespace NFive.SDK.Server.Migrations | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Migrations Classes MigrationConfiguration<TContext> Configuration relating to the use of migrations for a given database model."
  },
  "server/NFive.SDK.Server.Migrations.MigrationConfiguration-1.html": {
    "href": "server/NFive.SDK.Server.Migrations.MigrationConfiguration-1.html",
    "title": "Class MigrationConfiguration<TContext> | NFive API Reference",
    "keywords": "Class MigrationConfiguration<TContext> Configuration relating to the use of migrations for a given database model. Inheritance Object MigrationConfiguration<TContext> Namespace : NFive.SDK.Server.Migrations Assembly : NFive.SDK.Server.net.dll Syntax public abstract class MigrationConfiguration<TContext> : DbMigrationsConfiguration<TContext> where TContext : DbContext Type Parameters Name Description TContext The type of the database context. Constructors | Improve this Doc View Source MigrationConfiguration() Initializes a new instance of the MigrationConfiguration<TContext> class. Declaration protected MigrationConfiguration() Methods | Improve this Doc View Source Seed(TContext) Runs after upgrading to the latest migration to allow seed data to be updated. Declaration protected override void Seed(TContext context) Parameters Type Name Description TContext context Context to be used for updating seed data."
  },
  "server/NFive.SDK.Server.Locales.html": {
    "href": "server/NFive.SDK.Server.Locales.html",
    "title": "Namespace NFive.SDK.Server.Locales | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Server.Locales Classes LocaleCatalog"
  },
  "core/NFive.SDK.Core.Models.Color.html": {
    "href": "core/NFive.SDK.Core.Models.Color.html",
    "title": "Class Color | NFive API Reference",
    "keywords": "Class Color Represents an ARGB (alpha, red, green, blue) color. Inheritance Object Color Namespace : NFive.SDK.Core.Models Assembly : NFive.SDK.Core.net.dll Syntax [ComplexType] public class Color Properties | Improve this Doc View Source A Gets or sets the alpha component value of this Color structure. Declaration public byte? A { get; set; } Property Value Type Description Nullable < Byte > The alpha component value of this Color structure. | Improve this Doc View Source B Gets or sets the blue component value of this Color structure. Declaration public byte? B { get; set; } Property Value Type Description Nullable < Byte > The blue component value of this Color structure. | Improve this Doc View Source G Gets or sets the green component value of this Color structure. Declaration public byte? G { get; set; } Property Value Type Description Nullable < Byte > The green component value of this Color structure. | Improve this Doc View Source R Gets or sets the red component value of this Color structure. Declaration public byte? R { get; set; } Property Value Type Description Nullable < Byte > The red component value of this Color structure."
  },
  "core/NFive.SDK.Core.Models.Audio.html": {
    "href": "core/NFive.SDK.Core.Models.Audio.html",
    "title": "Namespace NFive.SDK.Core.Models.Audio | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Models.Audio Enums RadioStation GTA radio stations."
  },
  "core/NFive.SDK.Core.Models.Audio.RadioStation.html": {
    "href": "core/NFive.SDK.Core.Models.Audio.RadioStation.html",
    "title": "Enum RadioStation | NFive API Reference",
    "keywords": "Enum RadioStation GTA radio stations. Namespace : NFive.SDK.Core.Models.Audio Assembly : NFive.SDK.Core.net.dll Syntax public enum RadioStation Fields Name Description BlaineCountyTalkRadio Blaine County Talk Radio. BlueArkFM Blue Ark FM. ChannelX Channel X. EastLosFM East Los FM 106.2. FlyLoFM FlyLo FM. LosSantosRockRadio Los Santos Rock Radio. LowdownFM Lowdown FM. NonStopPopFM Non Stop Pop FM. RadioLosSantos Radio Los Santos. RadioMirrorPark Radio Mirror Park. RadioOff Radio off. RebelRadio Rebel Radio. SelfRadio Player custom radio. SoulwaxFM Soulwax FM. Space Space 103.2. TheLab The Lab. VinewoodBoulevardRadio Vinewood Boulevard Radio. WestCoastClassics West Coast Classics. WestCoastTalkRadio West Coast Talk Radio. WorldWideFM WorldWide FM."
  },
  "core/NFive.SDK.Core.Locales.html": {
    "href": "core/NFive.SDK.Core.Locales.html",
    "title": "Namespace NFive.SDK.Core.Locales | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Locales Interfaces ILocaleCatalog"
  },
  "core/NFive.SDK.Core.Extensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.html",
    "title": "Namespace NFive.SDK.Core.Extensions | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Extensions Classes NumericExtensions PositionExtensions StringExtensions TypeExtensions Vector2Extensions Vector3Extensions"
  },
  "core/NFive.SDK.Core.Extensions.Vector3Extensions.html": {
    "href": "core/NFive.SDK.Core.Extensions.Vector3Extensions.html",
    "title": "Class Vector3Extensions | NFive API Reference",
    "keywords": "Class Vector3Extensions Inheritance Object Vector3Extensions Namespace : NFive.SDK.Core.Extensions Assembly : NFive.SDK.Core.net.dll Syntax public static class Vector3Extensions Methods | Improve this Doc View Source InFrontOf(Vector3, Single, Single) Declaration public static Vector3 InFrontOf(this Vector3 position, float heading, float distance) Parameters Type Name Description Vector3 position Single heading Single distance Returns Type Description Vector3 | Improve this Doc View Source Lerp(Vector3, Vector3, Single) Applies a lerp function to two specified Vector3 s with a specified normal interval. Declaration public static Vector3 Lerp(this Vector3 pos1, Vector3 pos2, float normalizedInterval) Parameters Type Name Description Vector3 pos1 The start Vector3 of the lerp function. Vector3 pos2 The end Vector3 of the lerp function. Single normalizedInterval The normalized interval. Returns Type Description Vector3 The resulting Vector3 Remarks See https://en.wikipedia.org/wiki/Linear_interpolation | Improve this Doc View Source RotateAround(Vector3, Single, Single) Returns a Vector2 rotated around a specified Vector3 position by a specified angle and radius. Declaration public static Vector2 RotateAround(this Vector3 position, float radius, float angle) Parameters Type Name Description Vector3 position The position to rotate around. Single radius The radius. Single angle The angle. Returns Type Description Vector2 The Vector2 . | Improve this Doc View Source ToPosition(Vector3) Converts to Position . Declaration public static Position ToPosition(this Vector3 vector3) Parameters Type Name Description Vector3 vector3 The Vector3 . Returns Type Description Position The Position | Improve this Doc View Source TranslateDir(Vector3, Single, Single) Translates the Vector3 by the specified angle and distance. Declaration public static Vector3 TranslateDir(this Vector3 pos, float angleInDegrees, float distance) Parameters Type Name Description Vector3 pos The position. Single angleInDegrees The angle in degrees. Single distance The distance. Returns Type Description Vector3 The translated Vector3 ."
  },
  "nfive/NFive.Server.Rpc.RpcPacker.html": {
    "href": "nfive/NFive.Server.Rpc.RpcPacker.html",
    "title": "Class RpcPacker | NFive API Reference",
    "keywords": "Class RpcPacker Inheritance Object RpcPacker Namespace : NFive.Server.Rpc Assembly : NFive.Server.net.dll Syntax public static class RpcPacker : object Methods | Improve this Doc View Source Deserialize<T>(String) Declaration public static T Deserialize<T>(string json) Parameters Type Name Description String json Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Pack(OutboundMessage) Declaration public static byte[] Pack(OutboundMessage message) Parameters Type Name Description OutboundMessage message Returns Type Description Byte [] | Improve this Doc View Source Serialize(Object) Declaration public static byte[] Serialize(object obj) Parameters Type Name Description Object obj Returns Type Description Byte [] | Improve this Doc View Source Unpack(Byte[]) Declaration public static InboundMessage Unpack(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description InboundMessage"
  },
  "nfive/NFive.Server.Rpc.RpcManager.html": {
    "href": "nfive/NFive.Server.Rpc.RpcManager.html",
    "title": "Class RpcManager | NFive API Reference",
    "keywords": "Class RpcManager Inheritance Object RpcManager Namespace : NFive.Server.Rpc Assembly : NFive.Server.net.dll Syntax public static class RpcManager : object Methods | Improve this Doc View Source Emit(String, IClient, Object[]) Declaration public static void Emit(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads | Improve this Doc View Source Off(String, Delegate) Declaration public static void Off(string event, Delegate callback) Parameters Type Name Description String event Delegate callback | Improve this Doc View Source On(String, IClient, Action<ICommunicationMessage>) Declaration public static void On(string event, IClient target, Action<ICommunicationMessage> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(String, IClient, Action<ICommunicationMessage, T>) Declaration public static void On<T>(string event, IClient target, Action<ICommunicationMessage, T> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(String, IClient, Action<ICommunicationMessage, T1, T2>) Declaration public static void On<T1, T2>(string event, IClient target, Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(String, IClient, Action<ICommunicationMessage, T1, T2, T3>) Declaration public static void On<T1, T2, T3>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(String, IClient, Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public static void On<T1, T2, T3, T4>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(String, IClient, Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public static void On<T1, T2, T3, T4, T5>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRaw(String, Delegate) Declaration public static void OnRaw(string event, Delegate callback) Parameters Type Name Description String event Delegate callback | Improve this Doc View Source OnRequest(String, IClient, Action<ICommunicationMessage>) Declaration public static void OnRequest(string event, IClient target, Action<ICommunicationMessage> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(String, IClient, Action<ICommunicationMessage, T>) Declaration public static void OnRequest<T>(string event, IClient target, Action<ICommunicationMessage, T> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(String, IClient, Action<ICommunicationMessage, T1, T2>) Declaration public static void OnRequest<T1, T2>(string event, IClient target, Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(String, IClient, Action<ICommunicationMessage, T1, T2, T3>) Declaration public static void OnRequest<T1, T2, T3>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(String, IClient, Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public static void OnRequest<T1, T2, T3, T4>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(String, IClient, Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public static void OnRequest<T1, T2, T3, T4, T5>(string event, IClient target, Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description String event IClient target Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Request(String, IClient, Object[]) Declaration public static Task Request(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task | Improve this Doc View Source Request<T>(String, IClient, Object[]) Declaration public static Task<T> Request<T>(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(String, IClient, Object[]) Declaration public static Task<Tuple<T1, T2>> Request<T1, T2>(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(String, IClient, Object[]) Declaration public static Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(String, IClient, Object[]) Declaration public static Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(String, IClient, Object[]) Declaration public static Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(string event, IClient target, params object[] payloads) Parameters Type Name Description String event IClient target Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Server.Rcon.RconManager.html": {
    "href": "nfive/NFive.Server.Rcon.RconManager.html",
    "title": "Class RconManager | NFive API Reference",
    "keywords": "Class RconManager Inheritance Object RconManager Namespace : NFive.Server.Rcon Assembly : NFive.Server.net.dll Syntax public class RconManager : IRconManager Constructors | Improve this Doc View Source RconManager(ICommunicationManager) Declaration public RconManager(ICommunicationManager comms) Parameters Type Name Description ICommunicationManager comms Properties | Improve this Doc View Source Controllers Declaration public Dictionary<Name, List<Controller>> Controllers { get; set; } Property Value Type Description Dictionary < Name , List < Controller >> Methods | Improve this Doc View Source Register(String, Action) Declaration public void Register(string command, Action callback) Parameters Type Name Description String command Action callback | Improve this Doc View Source Register<T>(String, Action<T>) Declaration public void Register<T>(string command, Action<T> callback) Parameters Type Name Description String command Action <T> callback Type Parameters Name Description T"
  },
  "nfive/NFive.Server.Program.html": {
    "href": "nfive/NFive.Server.Program.html",
    "title": "Class Program | NFive API Reference",
    "keywords": "Class Program Inheritance Object Program Namespace : NFive.Server Assembly : NFive.Server.net.dll Syntax public class Program : BaseScript Constructors | Improve this Doc View Source Program() Declaration public Program()"
  },
  "nfive/NFive.Server.Models.html": {
    "href": "nfive/NFive.Server.Models.html",
    "title": "Namespace NFive.Server.Models | NFive API Reference",
    "keywords": "Namespace NFive.Server.Models Classes BootHistory"
  },
  "nfive/NFive.Server.Models.BootHistory.html": {
    "href": "nfive/NFive.Server.Models.BootHistory.html",
    "title": "Class BootHistory | NFive API Reference",
    "keywords": "Class BootHistory Inheritance Object BootHistory Namespace : NFive.Server.Models Assembly : NFive.Server.net.dll Syntax public class BootHistory : object Constructors | Improve this Doc View Source BootHistory() Declaration public BootHistory() Properties | Improve this Doc View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source LastActive Declaration public DateTime LastActive { get; set; } Property Value Type Description DateTime"
  },
  "nfive/NFive.Server.IoC.ContainerRegistrar.html": {
    "href": "nfive/NFive.Server.IoC.ContainerRegistrar.html",
    "title": "Class ContainerRegistrar | NFive API Reference",
    "keywords": "Class ContainerRegistrar Inheritance Object ContainerRegistrar Namespace : NFive.Server.IoC Assembly : NFive.Server.net.dll Syntax public class ContainerRegistrar : Griffin.Container.ContainerRegistrar Constructors | Improve this Doc View Source ContainerRegistrar() Declaration public ContainerRegistrar() Methods | Improve this Doc View Source RegisterPluginComponents(IEnumerable<Assembly>) Declaration public void RegisterPluginComponents(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies"
  },
  "nfive/NFive.Server.Events.html": {
    "href": "nfive/NFive.Server.Events.html",
    "title": "Namespace NFive.Server.Events | NFive API Reference",
    "keywords": "Namespace NFive.Server.Events Classes ConnectionDeferrals EventManager ExplosionEvent"
  },
  "nfive/NFive.Server.Configuration.CoreConfiguration.LogConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.CoreConfiguration.LogConfiguration.html",
    "title": "Class CoreConfiguration.LogConfiguration | NFive API Reference",
    "keywords": "Class CoreConfiguration.LogConfiguration Inheritance Object CoreConfiguration.LogConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class LogConfiguration : object Properties | Improve this Doc View Source Comms Declaration public LogLevel Comms { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source Core Declaration public LogLevel Core { get; set; } Property Value Type Description LogLevel | Improve this Doc View Source Output Declaration public CoreConfiguration.LogOutputConfiguration Output { get; set; } Property Value Type Description CoreConfiguration.LogOutputConfiguration | Improve this Doc View Source Plugins Declaration public Dictionary<string, LogLevel> Plugins { get; set; } Property Value Type Description Dictionary < String , LogLevel >"
  },
  "nfive/NFive.Server.Configuration.CoreConfiguration.DisplayConfiguration.html": {
    "href": "nfive/NFive.Server.Configuration.CoreConfiguration.DisplayConfiguration.html",
    "title": "Class CoreConfiguration.DisplayConfiguration | NFive API Reference",
    "keywords": "Class CoreConfiguration.DisplayConfiguration Inheritance Object CoreConfiguration.DisplayConfiguration Namespace : NFive.Server.Configuration Assembly : NFive.Server.net.dll Syntax public class DisplayConfiguration : object Properties | Improve this Doc View Source Game Declaration public string Game { get; set; } Property Value Type Description String | Improve this Doc View Source Map Declaration public string Map { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "plugin/NFive.SDK.Plugins.html": {
    "href": "plugin/NFive.SDK.Plugins.html",
    "title": "Namespace NFive.SDK.Plugins | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Plugins Classes DefinitionGraph Represents a loaded tree of plugins and their resolved dependencies. Plugin Represents a loaded NFive plugin configuration including nested dependencies. SteamId"
  },
  "plugin/NFive.SDK.Plugins.SteamId.html": {
    "href": "plugin/NFive.SDK.Plugins.SteamId.html",
    "title": "Class SteamId | NFive API Reference",
    "keywords": "Class SteamId Inheritance Object SteamId Namespace : NFive.SDK.Plugins Assembly : NFive.SDK.Plugins.dll Syntax public class SteamId Constructors | Improve this Doc View Source SteamId(String) Declaration public SteamId(string input) Parameters Type Name Description String input Methods | Improve this Doc View Source ToSteam64() Declaration public long ToSteam64() Returns Type Description Int64"
  },
  "plugin/NFive.SDK.Plugins.Plugin.html": {
    "href": "plugin/NFive.SDK.Plugins.Plugin.html",
    "title": "Class Plugin | NFive API Reference",
    "keywords": "Class Plugin Represents a loaded NFive plugin configuration including nested dependencies. Inheritance Object Plugin Namespace : NFive.SDK.Plugins Assembly : NFive.SDK.Plugins.dll Syntax public class Plugin : Core.Plugins.Plugin Properties | Improve this Doc View Source DependencyNodes Gets or sets the dependency plugins. Declaration public List<Plugin> DependencyNodes { get; set; } Property Value Type Description List < Plugin > The dependency plugins. Methods | Improve this Doc View Source Load(String) Loads a Plugin from the specified definition file. Declaration public static Plugin Load(string path) Parameters Type Name Description String path The path to the plugin definition file. Returns Type Description Plugin The loaded Plugin . Exceptions Type Condition ArgumentNullException path - A valid file path must be specified. FileNotFoundException Unable to find the plugin definition file. | Improve this Doc View Source Save(String) Serialize this instance and saves the to the specified path. Declaration public void Save(string path) Parameters Type Name Description String path The path to save the file at."
  },
  "plugin/NFive.SDK.Plugins.DefinitionGraph.html": {
    "href": "plugin/NFive.SDK.Plugins.DefinitionGraph.html",
    "title": "Class DefinitionGraph | NFive API Reference",
    "keywords": "Class DefinitionGraph Represents a loaded tree of plugins and their resolved dependencies. Inheritance Object DefinitionGraph Namespace : NFive.SDK.Plugins Assembly : NFive.SDK.Plugins.dll Syntax public class DefinitionGraph Properties | Improve this Doc View Source Plugins Gets or sets the tree of plugins. Declaration public List<Plugin> Plugins { get; set; } Property Value Type Description List < Plugin > The tree of plugins. Methods | Improve this Doc View Source Load(String) Deserialized the specified lock file into a DefinitionGraph . Declaration public static DefinitionGraph Load(string path = \"nfive.lock\") Parameters Type Name Description String path The path to the lock file. Returns Type Description DefinitionGraph The deserialized DefinitionGraph . Exceptions Type Condition ArgumentNullException A valid file path must be specified. FileNotFoundException Unable to find the plugin lock file. | Improve this Doc View Source Save(String) Serialize this instance and saves the file to the specified path. Declaration public void Save(string path = \"nfive.lock\") Parameters Type Name Description String path The path to save the file at."
  },
  "plugin/NFive.SDK.Plugins.Configuration.NameConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.NameConverter.html",
    "title": "Class NameConverter | NFive API Reference",
    "keywords": "Class NameConverter Yaml converter for type. Inheritance Object NameConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class NameConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a Yaml parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a Yaml emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.IPAddressConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.IPAddressConverter.html",
    "title": "Class IPAddressConverter | NFive API Reference",
    "keywords": "Class IPAddressConverter Yaml converter for IPAddress . Inheritance Object IPAddressConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class IPAddressConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a YAML parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a YAML emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.CultureInfoConverter.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.CultureInfoConverter.html",
    "title": "Class CultureInfoConverter | NFive API Reference",
    "keywords": "Class CultureInfoConverter Yaml converter for CultureInfo . Inheritance Object CultureInfoConverter Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public class CultureInfoConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Gets a value indicating whether the current converter supports converting the specified type. Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Reads an object's state from a YAML parser. Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Writes the specified object's state to a YAML emitter. Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "plugin/NFive.SDK.Plugins.Configuration.ConfigurationManager.html": {
    "href": "plugin/NFive.SDK.Plugins.Configuration.ConfigurationManager.html",
    "title": "Class ConfigurationManager | NFive API Reference",
    "keywords": "Class ConfigurationManager Utility helpers for generating and serializing plugin configuration files. Inheritance Object ConfigurationManager Namespace : NFive.SDK.Plugins.Configuration Assembly : NFive.SDK.Plugins.dll Syntax public static class ConfigurationManager Fields | Improve this Doc View Source ConfigurationPath The default path to the NFive configuration directory Declaration public const string ConfigurationPath = \"config\" Field Value Type Description String | Improve this Doc View Source DefinitionFile The default name of the NFive definition file. Declaration public const string DefinitionFile = \"nfive.yml\" Field Value Type Description String | Improve this Doc View Source LockFile The default name of the NFive lock file Declaration public const string LockFile = \"nfive.lock\" Field Value Type Description String | Improve this Doc View Source PluginPath The default path to the NFive plugins directory Declaration public const string PluginPath = \"plugins\" Field Value Type Description String | Improve this Doc View Source ResourceFile The default name of the FiveM resource file Declaration public const string ResourceFile = \"__resource.lua\" Field Value Type Description String Methods | Improve this Doc View Source InitializeConfig(Name, Type) Generates and saves an initial configuration for the specified plugin. Declaration public static object InitializeConfig(Name plugin, Type type) Parameters Type Name Description Name plugin Name of the plugin to generate configuration for. Type type The type of the configuration object. Returns Type Description Object The default configuration object. | Improve this Doc View Source InitializeType(String, Type) Generates and saves an initial configuration for the specified type. Declaration public static void InitializeType(string file, Type type) Parameters Type Name Description String file The configuration file to deserialize. Type type The type of the configuration object. | Improve this Doc View Source Load(Name, String, Type) Deserializes the specified file, owned by the specified plugin, into the specified type. Declaration public static object Load(Name name, string file, Type type) Parameters Type Name Description Name name The name of the plugin to look under. String file The file to deserialize under the plugin. Type type The type to deserialize as. Returns Type Description Object The deserialized object. | Improve this Doc View Source Load(String, Type) Deserializes the specified configuration file into the specified type. Declaration public static object Load(string path, Type type) Parameters Type Name Description String path The configuration file to deserialize. Type type The type to deserialize as. Returns Type Description Object The deserialized object. | Improve this Doc View Source Load<T>(String) Deserializes the specified configuration file into the specified type. Declaration public static T Load<T>(string path) Parameters Type Name Description String path The configuration file to deserialize. Returns Type Description T The deserialized object. Type Parameters Name Description T The type to deserialize as."
  },
  "nfive/NFive.Server.Communications.html": {
    "href": "nfive/NFive.Server.Communications.html",
    "title": "Namespace NFive.Server.Communications | NFive API Reference",
    "keywords": "Namespace NFive.Server.Communications Classes CommunicationManager CommunicationMessage CommunicationReceiveClient CommunicationReceiveServer CommunicationTarget CommunicationTransmitClient CommunicationTransmitServer"
  },
  "nfive/NFive.Server.Communications.CommunicationTransmitServer.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationTransmitServer.html",
    "title": "Class CommunicationTransmitServer | NFive API Reference",
    "keywords": "Class CommunicationTransmitServer Inheritance Object CommunicationTransmitServer Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationTransmitServer : ICommunicationTransmitServer Constructors | Improve this Doc View Source CommunicationTransmitServer(String, EventManager) Declaration public CommunicationTransmitServer(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager Methods | Improve this Doc View Source Emit(Object[]) Declaration public void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads | Improve this Doc View Source Request<T>(Object[]) Declaration public Task<T> Request<T>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(Object[]) Declaration public Task<Tuple<T1, T2>> Request<T1, T2>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(Object[]) Declaration public Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Server.Communications.CommunicationReceiveServer.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationReceiveServer.html",
    "title": "Class CommunicationReceiveServer | NFive API Reference",
    "keywords": "Class CommunicationReceiveServer Inheritance Object CommunicationReceiveServer Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationReceiveServer : ICommunicationReceiveServer Constructors | Improve this Doc View Source CommunicationReceiveServer(String, EventManager) Declaration public CommunicationReceiveServer(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Declaration public void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Declaration public void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Declaration public void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Declaration public void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Server.Communications.CommunicationReceiveClient.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationReceiveClient.html",
    "title": "Class CommunicationReceiveClient | NFive API Reference",
    "keywords": "Class CommunicationReceiveClient Inheritance Object CommunicationReceiveClient Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationReceiveClient : ICommunicationReceiveClient Constructors | Improve this Doc View Source CommunicationReceiveClient(String) Declaration public CommunicationReceiveClient(string event) Parameters Type Name Description String event | Improve this Doc View Source CommunicationReceiveClient(String, IClient) Declaration public CommunicationReceiveClient(string event, IClient client) Parameters Type Name Description String event IClient client Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Declaration public void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Declaration public void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Declaration public void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Declaration public void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Server.ClientList.html": {
    "href": "nfive/NFive.Server.ClientList.html",
    "title": "Class ClientList | NFive API Reference",
    "keywords": "Class ClientList Inheritance Object ClientList Namespace : NFive.Server Assembly : NFive.Server.net.dll Syntax public class ClientList : IClientList Constructors | Improve this Doc View Source ClientList(ILogger, ICommunicationManager) Declaration public ClientList(ILogger logger, ICommunicationManager comms) Parameters Type Name Description ILogger logger ICommunicationManager comms Properties | Improve this Doc View Source Clients Declaration public List<IClient> Clients { get; } Property Value Type Description List < IClient > Events | Improve this Doc View Source ClientAdded Declaration public event EventHandler<ClientEventArgs> ClientAdded Event Type Type Description EventHandler < ClientEventArgs > | Improve this Doc View Source ClientRemoved Declaration public event EventHandler<ClientEventArgs> ClientRemoved Event Type Type Description EventHandler < ClientEventArgs >"
  },
  "nfive/NFive.Client.html": {
    "href": "nfive/NFive.Client.html",
    "title": "Namespace NFive.Client | NFive API Reference",
    "keywords": "Namespace NFive.Client Classes Program"
  },
  "nfive/NFive.Client.Rpc.RpcManager.html": {
    "href": "nfive/NFive.Client.Rpc.RpcManager.html",
    "title": "Class RpcManager | NFive API Reference",
    "keywords": "Class RpcManager Inheritance Object RpcManager Namespace : NFive.Client.Rpc Assembly : NFive.Client.net.dll Syntax public static class RpcManager Methods | Improve this Doc View Source Emit(String, Object[]) Declaration public static void Emit(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads | Improve this Doc View Source Off(String, Delegate) Declaration public static void Off(string event, Delegate callback) Parameters Type Name Description String event Delegate callback | Improve this Doc View Source On(String, Action<ICommunicationMessage>) Declaration public static void On(string event, Action<ICommunicationMessage> callback) Parameters Type Name Description String event Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(String, Action<ICommunicationMessage, T>) Declaration public static void On<T>(string event, Action<ICommunicationMessage, T> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(String, Action<ICommunicationMessage, T1, T2>) Declaration public static void On<T1, T2>(string event, Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(String, Action<ICommunicationMessage, T1, T2, T3>) Declaration public static void On<T1, T2, T3>(string event, Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(String, Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public static void On<T1, T2, T3, T4>(string event, Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(String, Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public static void On<T1, T2, T3, T4, T5>(string event, Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRaw(String, Delegate) Declaration public static void OnRaw(string event, Delegate callback) Parameters Type Name Description String event Delegate callback | Improve this Doc View Source OnRequest(String, Action<ICommunicationMessage>) Declaration public static void OnRequest(string event, Action<ICommunicationMessage> callback) Parameters Type Name Description String event Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(String, Action<ICommunicationMessage, T>) Declaration public static void OnRequest<T>(string event, Action<ICommunicationMessage, T> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(String, Action<ICommunicationMessage, T1, T2>) Declaration public static void OnRequest<T1, T2>(string event, Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(String, Action<ICommunicationMessage, T1, T2, T3>) Declaration public static void OnRequest<T1, T2, T3>(string event, Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(String, Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public static void OnRequest<T1, T2, T3, T4>(string event, Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(String, Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public static void OnRequest<T1, T2, T3, T4, T5>(string event, Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description String event Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Request(String, Object[]) Declaration public static Task Request(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task | Improve this Doc View Source Request<T>(String, Object[]) Declaration public static Task<T> Request<T>(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(String, Object[]) Declaration public static Task<Tuple<T1, T2>> Request<T1, T2>(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(String, Object[]) Declaration public static Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(String, Object[]) Declaration public static Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(String, Object[]) Declaration public static Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(string event, params object[] payloads) Parameters Type Name Description String event Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Client.Rpc.OutboundMessage.html": {
    "href": "nfive/NFive.Client.Rpc.OutboundMessage.html",
    "title": "Class OutboundMessage | NFive API Reference",
    "keywords": "Class OutboundMessage Inheritance Object OutboundMessage Namespace : NFive.Client.Rpc Assembly : NFive.Client.net.dll Syntax public class OutboundMessage Properties | Improve this Doc View Source Event Declaration public string Event { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source Payloads Declaration public List<string> Payloads { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Source Declaration public int Source { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Pack() Declaration public byte[] Pack() Returns Type Description Byte []"
  },
  "nfive/NFive.Client.Events.html": {
    "href": "nfive/NFive.Client.Events.html",
    "title": "Namespace NFive.Client.Events | NFive API Reference",
    "keywords": "Namespace NFive.Client.Events Classes EventManager PedSpawnOptions TickManager"
  },
  "nfive/NFive.Client.Events.EventManager.html": {
    "href": "nfive/NFive.Client.Events.EventManager.html",
    "title": "Class EventManager | NFive API Reference",
    "keywords": "Class EventManager Inheritance Object EventManager Namespace : NFive.Client.Events Assembly : NFive.Client.net.dll Syntax public class EventManager Constructors | Improve this Doc View Source EventManager() Declaration public EventManager() Methods | Improve this Doc View Source Emit(String, Object[]) Declaration public void Emit(string event, params object[] args) Parameters Type Name Description String event Object [] args | Improve this Doc View Source Off(String, Delegate) Declaration public void Off(string event, Delegate action) Parameters Type Name Description String event Delegate action"
  },
  "nfive/NFive.Client.Diagnostics.html": {
    "href": "nfive/NFive.Client.Diagnostics.html",
    "title": "Namespace NFive.Client.Diagnostics | NFive API Reference",
    "keywords": "Namespace NFive.Client.Diagnostics Classes Logger"
  },
  "nfive/NFive.Client.Communications.CommunicationTransmitServer.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationTransmitServer.html",
    "title": "Class CommunicationTransmitServer | NFive API Reference",
    "keywords": "Class CommunicationTransmitServer Inheritance Object CommunicationTransmitServer Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationTransmitServer : ICommunicationTransmitServer Constructors | Improve this Doc View Source CommunicationTransmitServer(CommunicationTarget) Declaration public CommunicationTransmitServer(CommunicationTarget target) Parameters Type Name Description CommunicationTarget target Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String Methods | Improve this Doc View Source Emit(Object[]) Declaration public void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads | Improve this Doc View Source Request<T>(Object[]) Declaration public Task<T> Request<T>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(Object[]) Declaration public Task<Tuple<T1, T2>> Request<T1, T2>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(Object[]) Declaration public Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Client.Communications.CommunicationTransmitClient.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationTransmitClient.html",
    "title": "Class CommunicationTransmitClient | NFive API Reference",
    "keywords": "Class CommunicationTransmitClient Inheritance Object CommunicationTransmitClient Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationTransmitClient : ICommunicationTransmitClient Constructors | Improve this Doc View Source CommunicationTransmitClient(String, EventManager) Declaration public CommunicationTransmitClient(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String | Improve this Doc View Source EventManager Declaration public EventManager EventManager { get; } Property Value Type Description EventManager Methods | Improve this Doc View Source Emit(Object[]) Declaration public void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads | Improve this Doc View Source Request<T>(Object[]) Declaration public Task<T> Request<T>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(Object[]) Declaration public Task<Tuple<T1, T2>> Request<T1, T2>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(Object[]) Declaration public Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Client.Communications.CommunicationReceiveServer.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationReceiveServer.html",
    "title": "Class CommunicationReceiveServer | NFive API Reference",
    "keywords": "Class CommunicationReceiveServer Inheritance Object CommunicationReceiveServer Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationReceiveServer : ICommunicationReceiveServer Constructors | Improve this Doc View Source CommunicationReceiveServer(CommunicationTarget) Declaration public CommunicationReceiveServer(CommunicationTarget target) Parameters Type Name Description CommunicationTarget target Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Declaration public void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Declaration public void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Declaration public void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Declaration public void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Client.Communications.CommunicationManager.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationManager.html",
    "title": "Class CommunicationManager | NFive API Reference",
    "keywords": "Class CommunicationManager Inheritance Object CommunicationManager Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationManager : ICommunicationManager Constructors | Improve this Doc View Source CommunicationManager(EventManager) Declaration public CommunicationManager(EventManager eventManager) Parameters Type Name Description EventManager eventManager Methods | Improve this Doc View Source Event(String) Declaration public ICommunicationTarget Event(string event) Parameters Type Name Description String event Returns Type Description ICommunicationTarget"
  },
  "nfive/NFive.Client.Commands.CommandManager.html": {
    "href": "nfive/NFive.Client.Commands.CommandManager.html",
    "title": "Class CommandManager | NFive API Reference",
    "keywords": "Class CommandManager Inheritance Object CommandManager Namespace : NFive.Client.Commands Assembly : NFive.Client.net.dll Syntax public class CommandManager : ICommandManager Constructors | Improve this Doc View Source CommandManager() Declaration public CommandManager() Methods | Improve this Doc View Source On(String, Action) Declaration public void On(string command, Action action) Parameters Type Name Description String command Action action | Improve this Doc View Source On(String, Action<IEnumerable<String>>) Declaration public void On(string command, Action<IEnumerable<string>> action) Parameters Type Name Description String command Action < IEnumerable < String >> action | Improve this Doc View Source On(String, Action<String>) Declaration public void On(string command, Action<string> action) Parameters Type Name Description String command Action < String > action | Improve this Doc View Source On<T>(String, Action<T>) Declaration public void On<T>(string command, Action<T> action) Parameters Type Name Description String command Action <T> action Type Parameters Name Description T"
  },
  "server/NFive.SDK.Server.Events.SessionEvents.html": {
    "href": "server/NFive.SDK.Server.Events.SessionEvents.html",
    "title": "Class SessionEvents | NFive API Reference",
    "keywords": "Class SessionEvents Inheritance Object SessionEvents Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public static class SessionEvents Fields | Improve this Doc View Source ClientConnected The client connected event. Fired when a client has connected to the server; immediately after a session has been created. Declaration public const string ClientConnected = \"nfive:server:sessionmanager:clientConnected\" Field Value Type Description String | Improve this Doc View Source ClientConnecting The client connecting event. Fired when a client starts connecting. Declaration public const string ClientConnecting = \"nfive:server:sessionmanager:clientConnecting\" Field Value Type Description String | Improve this Doc View Source ClientDisconnected The client disconnected event. Fired when a client has disconnected from the server. Declaration public const string ClientDisconnected = \"nfive:server:sessionmanager:clientDisconnected\" Field Value Type Description String | Improve this Doc View Source ClientDisconnecting The client disconnecting event. Fired when a client is disconnecting from the server. Declaration public const string ClientDisconnecting = \"nfive:server:sessionmanager:clientDisconnecting\" Field Value Type Description String | Improve this Doc View Source ClientInitialized The client initialized event. Fired when the client has initialized. Declaration public const string ClientInitialized = \"nfive:server:sessionmanager:clientInitialized\" Field Value Type Description String | Improve this Doc View Source ClientInitializing The client initializing event. Fired when the client is initializing. Declaration public const string ClientInitializing = \"nfive:server:sessionmanager:clientInitializing\" Field Value Type Description String | Improve this Doc View Source ClientReconnected The client reconnecting event. Fired when a client has connected to the server during their disconnect grace period. Declaration public const string ClientReconnected = \"nfive:server:sessionmanager:clientReconnected\" Field Value Type Description String | Improve this Doc View Source ClientReconnecting The client reconnecting event. Fired when a client is connecting to the server during their disconnect grace period. Declaration public const string ClientReconnecting = \"nfive:server:sessionmanager:clientReconnecting\" Field Value Type Description String | Improve this Doc View Source DisconnectPlayer The disconnect player event. Used to disconnect a player from the server. Declaration public const string DisconnectPlayer = \"nfive:server:sessionmanager:disconnectPlayer\" Field Value Type Description String | Improve this Doc View Source GetCurrentSessions The get current sessions event. Used to request a list of the current sessions. Declaration public const string GetCurrentSessions = \"nfive:server:sessionmanager:getCurrentSessions\" Field Value Type Description String | Improve this Doc View Source GetCurrentSessionsCount The get current sessions count events. Used to request the current session count. Declaration public const string GetCurrentSessionsCount = \"nfive:server:sessionmanager:getCurrentSessionsCount\" Field Value Type Description String | Improve this Doc View Source GetMaxPlayers The get maximum players event. Used to request the configured maximum players. Declaration public const string GetMaxPlayers = \"nfive:server:sessionmanager:getMaxPlayers\" Field Value Type Description String | Improve this Doc View Source SessionCreated The session created event. Fired when a session has been created for a user. Declaration public const string SessionCreated = \"nfive:server:sessionmanager:sessionCreated\" Field Value Type Description String | Improve this Doc View Source SessionCreating The session creating event. Fired when a session is being created for a user; immediately after a user has been created. Declaration public const string SessionCreating = \"nfive:server:sessionmanager:sessionCreating\" Field Value Type Description String | Improve this Doc View Source SessionTimedOut The session timed out. Fired when a client session times out. Declaration public const string SessionTimedOut = \"nfive:server:sessionmanager:sessionTimedOut\" Field Value Type Description String | Improve this Doc View Source UserCreated The user created event. Fired when a user has been created for a client. Declaration public const string UserCreated = \"nfive:server:sessionmanager:userCreated\" Field Value Type Description String | Improve this Doc View Source UserCreating The user creating event. Fired when a user is being created for a client; immediately after the client starts connecting. Declaration public const string UserCreating = \"nfive:server:sessionmanager:userCreating\" Field Value Type Description String"
  },
  "server/NFive.SDK.Server.Events.ServerEvents.html": {
    "href": "server/NFive.SDK.Server.Events.ServerEvents.html",
    "title": "Class ServerEvents | NFive API Reference",
    "keywords": "Class ServerEvents Core NFive server events which are sent over the server event manager. Inheritance Object ServerEvents Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public static class ServerEvents Fields | Improve this Doc View Source Explosion Declaration public const string Explosion = \"nfive:server:explosion\" Field Value Type Description String | Improve this Doc View Source HostedSession Declaration public const string HostedSession = \"nfive:server:hostedSession\" Field Value Type Description String | Improve this Doc View Source HostingSession Declaration public const string HostingSession = \"nfive:server:hostingSession\" Field Value Type Description String | Improve this Doc View Source PlayerConnecting Declaration public const string PlayerConnecting = \"nfive:server:playerConnecting\" Field Value Type Description String | Improve this Doc View Source PlayerDropped Declaration public const string PlayerDropped = \"nfive:server:playerDropped\" Field Value Type Description String | Improve this Doc View Source RconCommand Declaration public const string RconCommand = \"nfive:server:rconCommand\" Field Value Type Description String | Improve this Doc View Source ResourceStart Declaration public const string ResourceStart = \"nfive:server:resourceStart\" Field Value Type Description String | Improve this Doc View Source ResourceStop Declaration public const string ResourceStop = \"nfive:server:resourceStop\" Field Value Type Description String | Improve this Doc View Source ServerInitialized The server initialized event. Fired as soon as the server has initialized. Declaration public const string ServerInitialized = \"nfive:server:serverInitialized\" Field Value Type Description String"
  },
  "server/NFive.SDK.Server.Events.IExplosionEvent.html": {
    "href": "server/NFive.SDK.Server.Events.IExplosionEvent.html",
    "title": "Interface IExplosionEvent | NFive API Reference",
    "keywords": "Interface IExplosionEvent Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public interface IExplosionEvent Properties | Improve this Doc View Source CameraShake Declaration float CameraShake { get; } Property Value Type Description Single | Improve this Doc View Source DamageScale Declaration float DamageScale { get; } Property Value Type Description Single | Improve this Doc View Source ExplosionType Declaration int ExplosionType { get; } Property Value Type Description Int32 | Improve this Doc View Source IsAudible Declaration bool IsAudible { get; } Property Value Type Description Boolean | Improve this Doc View Source IsInvisible Declaration bool IsInvisible { get; } Property Value Type Description Boolean | Improve this Doc View Source OwnerNetId Declaration int OwnerNetId { get; } Property Value Type Description Int32 | Improve this Doc View Source Position Declaration Position Position { get; } Property Value Type Description Position Methods | Improve this Doc View Source Cancel() Declaration void Cancel()"
  },
  "server/NFive.SDK.Server.Events.IConnectionDeferrals.html": {
    "href": "server/NFive.SDK.Server.Events.IConnectionDeferrals.html",
    "title": "Interface IConnectionDeferrals | NFive API Reference",
    "keywords": "Interface IConnectionDeferrals Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public interface IConnectionDeferrals Properties | Improve this Doc View Source Message Declaration string Message { set; } Property Value Type Description String Methods | Improve this Doc View Source Allow() Declaration void Allow() | Improve this Doc View Source Defer() Declaration void Defer() | Improve this Doc View Source Reject(String) Declaration void Reject(string message) Parameters Type Name Description String message | Improve this Doc View Source ShowCard(String) Declaration void ShowCard(string json) Parameters Type Name Description String json"
  },
  "server/NFive.SDK.Server.Events.FiveMServerEvents.html": {
    "href": "server/NFive.SDK.Server.Events.FiveMServerEvents.html",
    "title": "Class FiveMServerEvents | NFive API Reference",
    "keywords": "Class FiveMServerEvents Inheritance Object FiveMServerEvents Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public static class FiveMServerEvents Fields | Improve this Doc View Source Explosion Declaration public const string Explosion = \"explosionEvent\" Field Value Type Description String | Improve this Doc View Source HostedSession Declaration public const string HostedSession = \"HostedSession\" Field Value Type Description String | Improve this Doc View Source HostingSession Declaration public const string HostingSession = \"hostingSession\" Field Value Type Description String | Improve this Doc View Source PlayerConnecting Declaration public const string PlayerConnecting = \"playerConnecting\" Field Value Type Description String | Improve this Doc View Source PlayerDropped Declaration public const string PlayerDropped = \"playerDropped\" Field Value Type Description String | Improve this Doc View Source RconCommand Declaration public const string RconCommand = \"rconCommand\" Field Value Type Description String | Improve this Doc View Source ResourceStart Declaration public const string ResourceStart = \"onResourceStart\" Field Value Type Description String | Improve this Doc View Source ResourceStop Declaration public const string ResourceStop = \"onResourceStop\" Field Value Type Description String"
  },
  "server/NFive.SDK.Server.Events.ClientUserEventArgs.html": {
    "href": "server/NFive.SDK.Server.Events.ClientUserEventArgs.html",
    "title": "Class ClientUserEventArgs | NFive API Reference",
    "keywords": "Class ClientUserEventArgs Inheritance Object EventArgs ClientEventArgs ClientUserEventArgs Inherited Members ClientEventArgs.Client EventArgs.Empty Namespace : NFive.SDK.Server.Events Assembly : NFive.SDK.Server.net.dll Syntax public class ClientUserEventArgs : ClientEventArgs Constructors | Improve this Doc View Source ClientUserEventArgs(IClient, User) Initializes a new instance of the ClientUserEventArgs class. Declaration public ClientUserEventArgs(IClient client, User user) Parameters Type Name Description IClient client The client. User user The user. Properties | Improve this Doc View Source User Gets the user. Declaration public User User { get; } Property Value Type Description User The user."
  },
  "client/NFive.SDK.Client.Events.SessionEvents.html": {
    "href": "client/NFive.SDK.Client.Events.SessionEvents.html",
    "title": "Class SessionEvents | NFive API Reference",
    "keywords": "Class SessionEvents Inheritance Object SessionEvents Namespace : NFive.SDK.Client.Events Assembly : NFive.SDK.Client.net.dll Syntax public static class SessionEvents Fields | Improve this Doc View Source DisconnectPlayer Declaration public const string DisconnectPlayer = \"nfive:client:disconnectPlayer\" Field Value Type Description String"
  },
  "client/NFive.SDK.Client.Events.ITickManager.html": {
    "href": "client/NFive.SDK.Client.Events.ITickManager.html",
    "title": "Interface ITickManager | NFive API Reference",
    "keywords": "Interface ITickManager Namespace : NFive.SDK.Client.Events Assembly : NFive.SDK.Client.net.dll Syntax public interface ITickManager Methods | Improve this Doc View Source Off(Action) Declaration void Off(Action callback) Parameters Type Name Description Action callback | Improve this Doc View Source Off(Func<Task>) Declaration void Off(Func<Task> callback) Parameters Type Name Description Func < Task > callback | Improve this Doc View Source On(Action) Declaration void On(Action callback) Parameters Type Name Description Action callback | Improve this Doc View Source On(Func<Task>) Declaration void On(Func<Task> callback) Parameters Type Name Description Func < Task > callback"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationTransmit.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationTransmit.html",
    "title": "Interface ICommunicationTransmit | NFive API Reference",
    "keywords": "Interface ICommunicationTransmit Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationTransmit Methods | Improve this Doc View Source Emit(Object[]) Emits the specified payloads. Declaration void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. | Improve this Doc View Source Request<TReturn>(Object[]) Requests the specified type with the specified parameters. Declaration Task<TReturn> Request<TReturn>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task <TReturn> Type Parameters Name Description TReturn The type of the return. | Improve this Doc View Source Request<TReturn1, TReturn2>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2>> Request<TReturn1, TReturn2>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2>> The requested types. Type Parameters Name Description TReturn1 The type of the return1. TReturn2 The type of the return2. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3>> Request<TReturn1, TReturn2, TReturn3>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3, TReturn4>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3, TReturn4>> Request<TReturn1, TReturn2, TReturn3, TReturn4>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3, TReturn4>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. TReturn4 The type of the 4. | Improve this Doc View Source Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(Object[]) Requests the specified types with the specified parameters. Declaration Task<Tuple<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>> Request<TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads. Returns Type Description Task < Tuple <TReturn1, TReturn2, TReturn3, TReturn4, TReturn5>> The requested types. Type Parameters Name Description TReturn1 The type of the 1. TReturn2 The type of the 2. TReturn3 The type of the 3. TReturn4 The type of the 4. TReturn5 The type of the 5."
  },
  "client/NFive.SDK.Client.Communications.ICommunicationTarget.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationTarget.html",
    "title": "Interface ICommunicationTarget | NFive API Reference",
    "keywords": "Interface ICommunicationTarget Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationTarget Methods | Improve this Doc View Source FromClient() Returns a communication adapter for receiving, targeting the local client. Declaration ICommunicationReceiveClient FromClient() Returns Type Description ICommunicationReceiveClient A local client targeted communication adapter for receiving. | Improve this Doc View Source FromServer() Returns a communication adapter for receiving from the server. Declaration ICommunicationReceiveServer FromServer() Returns Type Description ICommunicationReceiveServer A server targeted communication adapter for receiving. | Improve this Doc View Source ToClient() Returns a communication adapter for transmitting, targeting the local client. Declaration ICommunicationTransmitClient ToClient() Returns Type Description ICommunicationTransmitClient A local client targeted communication adapter for transmitting. | Improve this Doc View Source ToServer() Returns a communication adapter adapter for transmitting to the server. Declaration ICommunicationTransmitServer ToServer() Returns Type Description ICommunicationTransmitServer A server targeted communication adapter for transmitting."
  },
  "client/NFive.SDK.Client.Communications.ICommunicationReceiveServer.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationReceiveServer.html",
    "title": "Interface ICommunicationReceiveServer | NFive API Reference",
    "keywords": "Interface ICommunicationReceiveServer Inherited Members ICommunicationReceive.On(Action<ICommunicationMessage>) ICommunicationReceive.On<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.On<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) ICommunicationReceive.OnRequest(Action<ICommunicationMessage>) ICommunicationReceive.OnRequest<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationReceiveServer : ICommunicationReceive"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationReceiveClient.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationReceiveClient.html",
    "title": "Interface ICommunicationReceiveClient | NFive API Reference",
    "keywords": "Interface ICommunicationReceiveClient Inherited Members ICommunicationReceive.On(Action<ICommunicationMessage>) ICommunicationReceive.On<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.On<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) ICommunicationReceive.OnRequest(Action<ICommunicationMessage>) ICommunicationReceive.OnRequest<T>(Action<ICommunicationMessage, T>) ICommunicationReceive.OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) ICommunicationReceive.OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) ICommunicationReceive.OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) ICommunicationReceive.OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationReceiveClient : ICommunicationReceive"
  },
  "client/NFive.SDK.Client.Communications.ICommunicationReceive.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationReceive.html",
    "title": "Interface ICommunicationReceive | NFive API Reference",
    "keywords": "Interface ICommunicationReceive Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationReceive Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Registers the specified callback. Declaration void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback The callback. | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Registers the specified callback. Declaration void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback The callback. Type Parameters Name Description T The type of the first callback parameter. | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Registers the specified callback. Declaration void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Registers the specified callback. Declaration void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Registers the specified callback. Declaration void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Registers the specified callback. Declaration void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. T5 The type of the fifth callback parameter. | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Registers the specified callback. Declaration void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback The callback. | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Registers the specified callback. Declaration void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback The callback. Type Parameters Name Description T The type of the first callback parameter. | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Registers the specified callback. Declaration void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Registers the specified callback. Declaration void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback The callback. Type Parameters Name Description T1 The type of the first callback parameter. T2 The type of the second callback parameter. T3 The type of the third callback parameter. T4 The type of the fourth callback parameter. T5 The type of the fifth callback parameter."
  },
  "client/NFive.SDK.Client.Communications.ICommunicationMessage.html": {
    "href": "client/NFive.SDK.Client.Communications.ICommunicationMessage.html",
    "title": "Interface ICommunicationMessage | NFive API Reference",
    "keywords": "Interface ICommunicationMessage Namespace : NFive.SDK.Client.Communications Assembly : NFive.SDK.Client.net.dll Syntax public interface ICommunicationMessage Methods | Improve this Doc View Source Reply(Object[]) Replies to the event with the specified payloads. Declaration void Reply(params object[] payloads) Parameters Type Name Description Object [] payloads The payloads to reply to the event with."
  },
  "core/NFive.SDK.Core.PluginAttribute.html": {
    "href": "core/NFive.SDK.Core.PluginAttribute.html",
    "title": "Class PluginAttribute | NFive API Reference",
    "keywords": "Class PluginAttribute Specifies the SDK version number the assembly was built against. Inheritance Object Attribute PluginAttribute Namespace : NFive.SDK.Core Assembly : NFive.SDK.Core.net.dll Syntax [AttributeUsage(AttributeTargets.Assembly)] public class PluginAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source PluginAttribute(UInt32) Initializes a new instance of the PluginAttribute class. Declaration public PluginAttribute(uint target) Parameters Type Name Description UInt32 target The target SDK version number. Properties | Improve this Doc View Source Target Gets the target SDK version number. Declaration public uint Target { get; } Property Value Type Description UInt32"
  },
  "core/NFive.SDK.Core.Models.html": {
    "href": "core/NFive.SDK.Core.Models.html",
    "title": "Namespace NFive.SDK.Core.Models | NFive API Reference",
    "keywords": "Namespace NFive.SDK.Core.Models Classes Color Represents an ARGB (alpha, red, green, blue) color. IdentityModel Represents the key properties for a stored model. Position Represents a position in 3D space. Vector2 Represents a position in 2D space. Vector3 Interfaces IIdentityModel Represents the key properties for a stored model."
  },
  "nfive/NFive.Server.Communications.CommunicationTransmitClient.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationTransmitClient.html",
    "title": "Class CommunicationTransmitClient | NFive API Reference",
    "keywords": "Class CommunicationTransmitClient Inheritance Object CommunicationTransmitClient Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationTransmitClient : ICommunicationTransmitClient Constructors | Improve this Doc View Source CommunicationTransmitClient(String) Declaration public CommunicationTransmitClient(string event) Parameters Type Name Description String event | Improve this Doc View Source CommunicationTransmitClient(String, IClient) Declaration public CommunicationTransmitClient(string event, IClient client) Parameters Type Name Description String event IClient client Methods | Improve this Doc View Source Emit(Object[]) Declaration public void Emit(params object[] payloads) Parameters Type Name Description Object [] payloads | Improve this Doc View Source Request<T>(Object[]) Declaration public Task<T> Request<T>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Request<T1, T2>(Object[]) Declaration public Task<Tuple<T1, T2>> Request<T1, T2>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Request<T1, T2, T3>(Object[]) Declaration public Task<Tuple<T1, T2, T3>> Request<T1, T2, T3>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Request<T1, T2, T3, T4>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4>> Request<T1, T2, T3, T4>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Request<T1, T2, T3, T4, T5>(Object[]) Declaration public Task<Tuple<T1, T2, T3, T4, T5>> Request<T1, T2, T3, T4, T5>(params object[] payloads) Parameters Type Name Description Object [] payloads Returns Type Description Task < Tuple <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "nfive/NFive.Server.Communications.CommunicationTarget.html": {
    "href": "nfive/NFive.Server.Communications.CommunicationTarget.html",
    "title": "Class CommunicationTarget | NFive API Reference",
    "keywords": "Class CommunicationTarget Inheritance Object CommunicationTarget Namespace : NFive.Server.Communications Assembly : NFive.Server.net.dll Syntax public class CommunicationTarget : ICommunicationTarget Constructors | Improve this Doc View Source CommunicationTarget(EventManager, String) Declaration public CommunicationTarget(EventManager eventManager, string event) Parameters Type Name Description EventManager eventManager String event Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String Methods | Improve this Doc View Source FromClient(IClient) Declaration public ICommunicationReceiveClient FromClient(IClient client) Parameters Type Name Description IClient client Returns Type Description ICommunicationReceiveClient | Improve this Doc View Source FromClients() Declaration public ICommunicationReceiveClient FromClients() Returns Type Description ICommunicationReceiveClient | Improve this Doc View Source FromServer() Declaration public ICommunicationReceiveServer FromServer() Returns Type Description ICommunicationReceiveServer | Improve this Doc View Source ToClient(IClient) Declaration public ICommunicationTransmitClient ToClient(IClient client) Parameters Type Name Description IClient client Returns Type Description ICommunicationTransmitClient | Improve this Doc View Source ToClients() Declaration public ICommunicationTransmitClient ToClients() Returns Type Description ICommunicationTransmitClient | Improve this Doc View Source ToServer() Declaration public ICommunicationTransmitServer ToServer() Returns Type Description ICommunicationTransmitServer"
  },
  "nfive/NFive.Client.Rpc.html": {
    "href": "nfive/NFive.Client.Rpc.html",
    "title": "Namespace NFive.Client.Rpc | NFive API Reference",
    "keywords": "Namespace NFive.Client.Rpc Classes InboundMessage OutboundMessage RpcManager RpcPacker"
  },
  "nfive/NFive.Client.Rpc.RpcPacker.html": {
    "href": "nfive/NFive.Client.Rpc.RpcPacker.html",
    "title": "Class RpcPacker | NFive API Reference",
    "keywords": "Class RpcPacker Inheritance Object RpcPacker Namespace : NFive.Client.Rpc Assembly : NFive.Client.net.dll Syntax public static class RpcPacker Methods | Improve this Doc View Source Deserialize<T>(String) Declaration public static T Deserialize<T>(string json) Parameters Type Name Description String json Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Pack(OutboundMessage) Declaration public static byte[] Pack(OutboundMessage message) Parameters Type Name Description OutboundMessage message Returns Type Description Byte [] | Improve this Doc View Source Serialize(Object) Declaration public static byte[] Serialize(object obj) Parameters Type Name Description Object obj Returns Type Description Byte [] | Improve this Doc View Source Unpack(Byte[]) Declaration public static InboundMessage Unpack(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description InboundMessage"
  },
  "nfive/NFive.Client.Program.html": {
    "href": "nfive/NFive.Client.Program.html",
    "title": "Class Program | NFive API Reference",
    "keywords": "Class Program Inheritance Object Program Namespace : NFive.Client Assembly : NFive.Client.net.dll Syntax public class Program : BaseScript Constructors | Improve this Doc View Source Program() Primary client entry point. Initializes a new instance of the Program class. Declaration public Program()"
  },
  "nfive/NFive.Client.Events.TickManager.html": {
    "href": "nfive/NFive.Client.Events.TickManager.html",
    "title": "Class TickManager | NFive API Reference",
    "keywords": "Class TickManager Inheritance Object TickManager Namespace : NFive.Client.Events Assembly : NFive.Client.net.dll Syntax public class TickManager : ITickManager Constructors | Improve this Doc View Source TickManager(Action<Func<Task>>, Action<Func<Task>>) Declaration public TickManager(Action<Func<Task>> attachCallback, Action<Func<Task>> detachCallback) Parameters Type Name Description Action < Func < Task >> attachCallback Action < Func < Task >> detachCallback Methods | Improve this Doc View Source Off(Action) Declaration public void Off(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Off(Func<Task>) Declaration public void Off(Func<Task> action) Parameters Type Name Description Func < Task > action | Improve this Doc View Source On(Action) Declaration public void On(Action action) Parameters Type Name Description Action action | Improve this Doc View Source On(Func<Task>) Declaration public void On(Func<Task> action) Parameters Type Name Description Func < Task > action"
  },
  "nfive/NFive.Client.Events.PedSpawnOptions.html": {
    "href": "nfive/NFive.Client.Events.PedSpawnOptions.html",
    "title": "Class PedSpawnOptions | NFive API Reference",
    "keywords": "Class PedSpawnOptions Inheritance Object PedSpawnOptions Namespace : NFive.Client.Events Assembly : NFive.Client.net.dll Syntax public class PedSpawnOptions Constructors | Improve this Doc View Source PedSpawnOptions(Single, Single, Single, UInt32, Object) Declaration public PedSpawnOptions(float x, float y, float z, uint model, dynamic setters) Parameters Type Name Description Single x Single y Single z UInt32 model Object setters Properties | Improve this Doc View Source Model Declaration public Model Model { get; set; } Property Value Type Description Model | Improve this Doc View Source Position Declaration public Vector3 Position { get; set; } Property Value Type Description Vector3 Methods | Improve this Doc View Source Cancel() Declaration public void Cancel()"
  },
  "nfive/NFive.Client.Diagnostics.Logger.html": {
    "href": "nfive/NFive.Client.Diagnostics.Logger.html",
    "title": "Class Logger | NFive API Reference",
    "keywords": "Class Logger Inheritance Object Logger Namespace : NFive.Client.Diagnostics Assembly : NFive.Client.net.dll Syntax public class Logger : ILogger Constructors | Improve this Doc View Source Logger(String) Declaration public Logger(string prefix = \"\") Parameters Type Name Description String prefix Properties | Improve this Doc View Source Prefix Declaration public string Prefix { get; } Property Value Type Description String Methods | Improve this Doc View Source Debug(String) Declaration public void Debug(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(Exception, String) Declaration public void Error(Exception exception, string message) Parameters Type Name Description Exception exception String message | Improve this Doc View Source Info(String) Declaration public void Info(string message) Parameters Type Name Description String message | Improve this Doc View Source Log(String, LogLevel) Declaration public void Log(string message, LogLevel level) Parameters Type Name Description String message LogLevel level | Improve this Doc View Source Trace(String) Declaration public void Trace(string message) Parameters Type Name Description String message | Improve this Doc View Source Warn(String) Declaration public void Warn(string message) Parameters Type Name Description String message"
  },
  "nfive/NFive.Client.Communications.html": {
    "href": "nfive/NFive.Client.Communications.html",
    "title": "Namespace NFive.Client.Communications | NFive API Reference",
    "keywords": "Namespace NFive.Client.Communications Classes CommunicationManager CommunicationMessage CommunicationReceiveClient CommunicationReceiveServer CommunicationTarget CommunicationTransmitClient CommunicationTransmitServer"
  },
  "nfive/NFive.Client.Communications.CommunicationTarget.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationTarget.html",
    "title": "Class CommunicationTarget | NFive API Reference",
    "keywords": "Class CommunicationTarget Inheritance Object CommunicationTarget Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationTarget : ICommunicationTarget Constructors | Improve this Doc View Source CommunicationTarget(EventManager, String) Declaration public CommunicationTarget(EventManager eventManager, string event) Parameters Type Name Description EventManager eventManager String event Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String | Improve this Doc View Source EventManager Declaration public EventManager EventManager { get; } Property Value Type Description EventManager Methods | Improve this Doc View Source FromClient() Declaration public ICommunicationReceiveClient FromClient() Returns Type Description ICommunicationReceiveClient | Improve this Doc View Source FromServer() Declaration public ICommunicationReceiveServer FromServer() Returns Type Description ICommunicationReceiveServer | Improve this Doc View Source ToClient() Declaration public ICommunicationTransmitClient ToClient() Returns Type Description ICommunicationTransmitClient | Improve this Doc View Source ToServer() Declaration public ICommunicationTransmitServer ToServer() Returns Type Description ICommunicationTransmitServer"
  },
  "nfive/NFive.Client.Communications.CommunicationMessage.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationMessage.html",
    "title": "Class CommunicationMessage | NFive API Reference",
    "keywords": "Class CommunicationMessage Inheritance Object CommunicationMessage Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationMessage : ICommunicationMessage Constructors | Improve this Doc View Source CommunicationMessage(String) Declaration public CommunicationMessage(string event) Parameters Type Name Description String event | Improve this Doc View Source CommunicationMessage(String, EventManager) Declaration public CommunicationMessage(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager | Improve this Doc View Source CommunicationMessage(String, Guid, Boolean) Declaration public CommunicationMessage(string event, Guid id, bool networked) Parameters Type Name Description String event Guid id Boolean networked Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Guid Id { get; } Property Value Type Description Guid Methods | Improve this Doc View Source Reply(Object[]) Declaration public void Reply(params object[] payloads) Parameters Type Name Description Object [] payloads"
  },
  "nfive/NFive.Client.Communications.CommunicationReceiveClient.html": {
    "href": "nfive/NFive.Client.Communications.CommunicationReceiveClient.html",
    "title": "Class CommunicationReceiveClient | NFive API Reference",
    "keywords": "Class CommunicationReceiveClient Inheritance Object CommunicationReceiveClient Namespace : NFive.Client.Communications Assembly : NFive.Client.net.dll Syntax public class CommunicationReceiveClient : ICommunicationReceiveClient Constructors | Improve this Doc View Source CommunicationReceiveClient(String, EventManager) Declaration public CommunicationReceiveClient(string event, EventManager eventManager) Parameters Type Name Description String event EventManager eventManager Properties | Improve this Doc View Source Event Declaration public string Event { get; } Property Value Type Description String | Improve this Doc View Source EventManager Declaration public EventManager EventManager { get; } Property Value Type Description EventManager Methods | Improve this Doc View Source On(Action<ICommunicationMessage>) Declaration public void On(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source On<T>(Action<ICommunicationMessage, T>) Declaration public void On<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source On<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void On<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void On<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void On<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void On<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source OnRequest(Action<ICommunicationMessage>) Declaration public void OnRequest(Action<ICommunicationMessage> callback) Parameters Type Name Description Action < ICommunicationMessage > callback | Improve this Doc View Source OnRequest<T>(Action<ICommunicationMessage, T>) Declaration public void OnRequest<T>(Action<ICommunicationMessage, T> callback) Parameters Type Name Description Action < ICommunicationMessage , T> callback Type Parameters Name Description T | Improve this Doc View Source OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2>) Declaration public void OnRequest<T1, T2>(Action<ICommunicationMessage, T1, T2> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2> callback Type Parameters Name Description T1 T2 | Improve this Doc View Source OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3>) Declaration public void OnRequest<T1, T2, T3>(Action<ICommunicationMessage, T1, T2, T3> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3> callback Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4>) Declaration public void OnRequest<T1, T2, T3, T4>(Action<ICommunicationMessage, T1, T2, T3, T4> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4> callback Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5>) Declaration public void OnRequest<T1, T2, T3, T4, T5>(Action<ICommunicationMessage, T1, T2, T3, T4, T5> callback) Parameters Type Name Description Action < ICommunicationMessage , T1, T2, T3, T4, T5> callback Type Parameters Name Description T1 T2 T3 T4 T5"
  }
}